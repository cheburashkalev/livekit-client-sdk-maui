// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ffi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LiveKit.Proto {

  /// <summary>Holder for reflection information generated from ffi.proto</summary>
  public static partial class FfiReflection {

    #region Descriptor
    /// <summary>File descriptor for ffi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FfiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglmZmkucHJvdG8SDWxpdmVraXQucHJvdG8aCmUyZWUucHJvdG8aC3RyYWNr",
            "LnByb3RvGgpyb29tLnByb3RvGhF2aWRlb19mcmFtZS5wcm90bxoRYXVkaW9f",
            "ZnJhbWUucHJvdG8aCXJwYy5wcm90byKmFQoKRmZpUmVxdWVzdBIwCgdkaXNw",
            "b3NlGAIgASgLMh0ubGl2ZWtpdC5wcm90by5EaXNwb3NlUmVxdWVzdEgAEjAK",
            "B2Nvbm5lY3QYAyABKAsyHS5saXZla2l0LnByb3RvLkNvbm5lY3RSZXF1ZXN0",
            "SAASNgoKZGlzY29ubmVjdBgEIAEoCzIgLmxpdmVraXQucHJvdG8uRGlzY29u",
            "bmVjdFJlcXVlc3RIABI7Cg1wdWJsaXNoX3RyYWNrGAUgASgLMiIubGl2ZWtp",
            "dC5wcm90by5QdWJsaXNoVHJhY2tSZXF1ZXN0SAASPwoPdW5wdWJsaXNoX3Ry",
            "YWNrGAYgASgLMiQubGl2ZWtpdC5wcm90by5VbnB1Ymxpc2hUcmFja1JlcXVl",
            "c3RIABI5CgxwdWJsaXNoX2RhdGEYByABKAsyIS5saXZla2l0LnByb3RvLlB1",
            "Ymxpc2hEYXRhUmVxdWVzdEgAEj0KDnNldF9zdWJzY3JpYmVkGAggASgLMiMu",
            "bGl2ZWtpdC5wcm90by5TZXRTdWJzY3JpYmVkUmVxdWVzdEgAEkQKEnNldF9s",
            "b2NhbF9tZXRhZGF0YRgJIAEoCzImLmxpdmVraXQucHJvdG8uU2V0TG9jYWxN",
            "ZXRhZGF0YVJlcXVlc3RIABI8Cg5zZXRfbG9jYWxfbmFtZRgKIAEoCzIiLmxp",
            "dmVraXQucHJvdG8uU2V0TG9jYWxOYW1lUmVxdWVzdEgAEkgKFHNldF9sb2Nh",
            "bF9hdHRyaWJ1dGVzGAsgASgLMigubGl2ZWtpdC5wcm90by5TZXRMb2NhbEF0",
            "dHJpYnV0ZXNSZXF1ZXN0SAASQgoRZ2V0X3Nlc3Npb25fc3RhdHMYDCABKAsy",
            "JS5saXZla2l0LnByb3RvLkdldFNlc3Npb25TdGF0c1JlcXVlc3RIABJLChVw",
            "dWJsaXNoX3RyYW5zY3JpcHRpb24YDSABKAsyKi5saXZla2l0LnByb3RvLlB1",
            "Ymxpc2hUcmFuc2NyaXB0aW9uUmVxdWVzdEgAEkAKEHB1Ymxpc2hfc2lwX2R0",
            "bWYYDiABKAsyJC5saXZla2l0LnByb3RvLlB1Ymxpc2hTaXBEdG1mUmVxdWVz",
            "dEgAEkQKEmNyZWF0ZV92aWRlb190cmFjaxgPIAEoCzImLmxpdmVraXQucHJv",
            "dG8uQ3JlYXRlVmlkZW9UcmFja1JlcXVlc3RIABJEChJjcmVhdGVfYXVkaW9f",
            "dHJhY2sYECABKAsyJi5saXZla2l0LnByb3RvLkNyZWF0ZUF1ZGlvVHJhY2tS",
            "ZXF1ZXN0SAASQAoQbG9jYWxfdHJhY2tfbXV0ZRgRIAEoCzIkLmxpdmVraXQu",
            "cHJvdG8uTG9jYWxUcmFja011dGVSZXF1ZXN0SAASRgoTZW5hYmxlX3JlbW90",
            "ZV90cmFjaxgSIAEoCzInLmxpdmVraXQucHJvdG8uRW5hYmxlUmVtb3RlVHJh",
            "Y2tSZXF1ZXN0SAASMwoJZ2V0X3N0YXRzGBMgASgLMh4ubGl2ZWtpdC5wcm90",
            "by5HZXRTdGF0c1JlcXVlc3RIABJAChBuZXdfdmlkZW9fc3RyZWFtGBQgASgL",
            "MiQubGl2ZWtpdC5wcm90by5OZXdWaWRlb1N0cmVhbVJlcXVlc3RIABJAChBu",
            "ZXdfdmlkZW9fc291cmNlGBUgASgLMiQubGl2ZWtpdC5wcm90by5OZXdWaWRl",
            "b1NvdXJjZVJlcXVlc3RIABJGChNjYXB0dXJlX3ZpZGVvX2ZyYW1lGBYgASgL",
            "MicubGl2ZWtpdC5wcm90by5DYXB0dXJlVmlkZW9GcmFtZVJlcXVlc3RIABI7",
            "Cg12aWRlb19jb252ZXJ0GBcgASgLMiIubGl2ZWtpdC5wcm90by5WaWRlb0Nv",
            "bnZlcnRSZXF1ZXN0SAASWQoddmlkZW9fc3RyZWFtX2Zyb21fcGFydGljaXBh",
            "bnQYGCABKAsyMC5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtRnJvbVBhcnRp",
            "Y2lwYW50UmVxdWVzdEgAEkAKEG5ld19hdWRpb19zdHJlYW0YGSABKAsyJC5s",
            "aXZla2l0LnByb3RvLk5ld0F1ZGlvU3RyZWFtUmVxdWVzdEgAEkAKEG5ld19h",
            "dWRpb19zb3VyY2UYGiABKAsyJC5saXZla2l0LnByb3RvLk5ld0F1ZGlvU291",
            "cmNlUmVxdWVzdEgAEkYKE2NhcHR1cmVfYXVkaW9fZnJhbWUYGyABKAsyJy5s",
            "aXZla2l0LnByb3RvLkNhcHR1cmVBdWRpb0ZyYW1lUmVxdWVzdEgAEkQKEmNs",
            "ZWFyX2F1ZGlvX2J1ZmZlchgcIAEoCzImLmxpdmVraXQucHJvdG8uQ2xlYXJB",
            "dWRpb0J1ZmZlclJlcXVlc3RIABJGChNuZXdfYXVkaW9fcmVzYW1wbGVyGB0g",
            "ASgLMicubGl2ZWtpdC5wcm90by5OZXdBdWRpb1Jlc2FtcGxlclJlcXVlc3RI",
            "ABJEChJyZW1peF9hbmRfcmVzYW1wbGUYHiABKAsyJi5saXZla2l0LnByb3Rv",
            "LlJlbWl4QW5kUmVzYW1wbGVSZXF1ZXN0SAASKgoEZTJlZRgfIAEoCzIaLmxp",
            "dmVraXQucHJvdG8uRTJlZVJlcXVlc3RIABJZCh1hdWRpb19zdHJlYW1fZnJv",
            "bV9wYXJ0aWNpcGFudBggIAEoCzIwLmxpdmVraXQucHJvdG8uQXVkaW9TdHJl",
            "YW1Gcm9tUGFydGljaXBhbnRSZXF1ZXN0SAASQgoRbmV3X3NveF9yZXNhbXBs",
            "ZXIYISABKAsyJS5saXZla2l0LnByb3RvLk5ld1NveFJlc2FtcGxlclJlcXVl",
            "c3RIABJEChJwdXNoX3NveF9yZXNhbXBsZXIYIiABKAsyJi5saXZla2l0LnBy",
            "b3RvLlB1c2hTb3hSZXNhbXBsZXJSZXF1ZXN0SAASRgoTZmx1c2hfc294X3Jl",
            "c2FtcGxlchgjIAEoCzInLmxpdmVraXQucHJvdG8uRmx1c2hTb3hSZXNhbXBs",
            "ZXJSZXF1ZXN0SAASQgoRc2VuZF9jaGF0X21lc3NhZ2UYJCABKAsyJS5saXZl",
            "a2l0LnByb3RvLlNlbmRDaGF0TWVzc2FnZVJlcXVlc3RIABJCChFlZGl0X2No",
            "YXRfbWVzc2FnZRglIAEoCzIlLmxpdmVraXQucHJvdG8uRWRpdENoYXRNZXNz",
            "YWdlUmVxdWVzdEgAEjcKC3BlcmZvcm1fcnBjGCYgASgLMiAubGl2ZWtpdC5w",
            "cm90by5QZXJmb3JtUnBjUmVxdWVzdEgAEkYKE3JlZ2lzdGVyX3JwY19tZXRo",
            "b2QYJyABKAsyJy5saXZla2l0LnByb3RvLlJlZ2lzdGVyUnBjTWV0aG9kUmVx",
            "dWVzdEgAEkoKFXVucmVnaXN0ZXJfcnBjX21ldGhvZBgoIAEoCzIpLmxpdmVr",
            "aXQucHJvdG8uVW5yZWdpc3RlclJwY01ldGhvZFJlcXVlc3RIABJbCh5ycGNf",
            "bWV0aG9kX2ludm9jYXRpb25fcmVzcG9uc2UYKSABKAsyMS5saXZla2l0LnBy",
            "b3RvLlJwY01ldGhvZEludm9jYXRpb25SZXNwb25zZVJlcXVlc3RIAEIJCgdt",
            "ZXNzYWdlIooVCgtGZmlSZXNwb25zZRIxCgdkaXNwb3NlGAIgASgLMh4ubGl2",
            "ZWtpdC5wcm90by5EaXNwb3NlUmVzcG9uc2VIABIxCgdjb25uZWN0GAMgASgL",
            "Mh4ubGl2ZWtpdC5wcm90by5Db25uZWN0UmVzcG9uc2VIABI3CgpkaXNjb25u",
            "ZWN0GAQgASgLMiEubGl2ZWtpdC5wcm90by5EaXNjb25uZWN0UmVzcG9uc2VI",
            "ABI8Cg1wdWJsaXNoX3RyYWNrGAUgASgLMiMubGl2ZWtpdC5wcm90by5QdWJs",
            "aXNoVHJhY2tSZXNwb25zZUgAEkAKD3VucHVibGlzaF90cmFjaxgGIAEoCzIl",
            "LmxpdmVraXQucHJvdG8uVW5wdWJsaXNoVHJhY2tSZXNwb25zZUgAEjoKDHB1",
            "Ymxpc2hfZGF0YRgHIAEoCzIiLmxpdmVraXQucHJvdG8uUHVibGlzaERhdGFS",
            "ZXNwb25zZUgAEj4KDnNldF9zdWJzY3JpYmVkGAggASgLMiQubGl2ZWtpdC5w",
            "cm90by5TZXRTdWJzY3JpYmVkUmVzcG9uc2VIABJFChJzZXRfbG9jYWxfbWV0",
            "YWRhdGEYCSABKAsyJy5saXZla2l0LnByb3RvLlNldExvY2FsTWV0YWRhdGFS",
            "ZXNwb25zZUgAEj0KDnNldF9sb2NhbF9uYW1lGAogASgLMiMubGl2ZWtpdC5w",
            "cm90by5TZXRMb2NhbE5hbWVSZXNwb25zZUgAEkkKFHNldF9sb2NhbF9hdHRy",
            "aWJ1dGVzGAsgASgLMikubGl2ZWtpdC5wcm90by5TZXRMb2NhbEF0dHJpYnV0",
            "ZXNSZXNwb25zZUgAEkMKEWdldF9zZXNzaW9uX3N0YXRzGAwgASgLMiYubGl2",
            "ZWtpdC5wcm90by5HZXRTZXNzaW9uU3RhdHNSZXNwb25zZUgAEkwKFXB1Ymxp",
            "c2hfdHJhbnNjcmlwdGlvbhgNIAEoCzIrLmxpdmVraXQucHJvdG8uUHVibGlz",
            "aFRyYW5zY3JpcHRpb25SZXNwb25zZUgAEkEKEHB1Ymxpc2hfc2lwX2R0bWYY",
            "DiABKAsyJS5saXZla2l0LnByb3RvLlB1Ymxpc2hTaXBEdG1mUmVzcG9uc2VI",
            "ABJFChJjcmVhdGVfdmlkZW9fdHJhY2sYDyABKAsyJy5saXZla2l0LnByb3Rv",
            "LkNyZWF0ZVZpZGVvVHJhY2tSZXNwb25zZUgAEkUKEmNyZWF0ZV9hdWRpb190",
            "cmFjaxgQIAEoCzInLmxpdmVraXQucHJvdG8uQ3JlYXRlQXVkaW9UcmFja1Jl",
            "c3BvbnNlSAASQQoQbG9jYWxfdHJhY2tfbXV0ZRgRIAEoCzIlLmxpdmVraXQu",
            "cHJvdG8uTG9jYWxUcmFja011dGVSZXNwb25zZUgAEkcKE2VuYWJsZV9yZW1v",
            "dGVfdHJhY2sYEiABKAsyKC5saXZla2l0LnByb3RvLkVuYWJsZVJlbW90ZVRy",
            "YWNrUmVzcG9uc2VIABI0CglnZXRfc3RhdHMYEyABKAsyHy5saXZla2l0LnBy",
            "b3RvLkdldFN0YXRzUmVzcG9uc2VIABJBChBuZXdfdmlkZW9fc3RyZWFtGBQg",
            "ASgLMiUubGl2ZWtpdC5wcm90by5OZXdWaWRlb1N0cmVhbVJlc3BvbnNlSAAS",
            "QQoQbmV3X3ZpZGVvX3NvdXJjZRgVIAEoCzIlLmxpdmVraXQucHJvdG8uTmV3",
            "VmlkZW9Tb3VyY2VSZXNwb25zZUgAEkcKE2NhcHR1cmVfdmlkZW9fZnJhbWUY",
            "FiABKAsyKC5saXZla2l0LnByb3RvLkNhcHR1cmVWaWRlb0ZyYW1lUmVzcG9u",
            "c2VIABI8Cg12aWRlb19jb252ZXJ0GBcgASgLMiMubGl2ZWtpdC5wcm90by5W",
            "aWRlb0NvbnZlcnRSZXNwb25zZUgAEloKHXZpZGVvX3N0cmVhbV9mcm9tX3Bh",
            "cnRpY2lwYW50GBggASgLMjEubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbUZy",
            "b21QYXJ0aWNpcGFudFJlc3BvbnNlSAASQQoQbmV3X2F1ZGlvX3N0cmVhbRgZ",
            "IAEoCzIlLmxpdmVraXQucHJvdG8uTmV3QXVkaW9TdHJlYW1SZXNwb25zZUgA",
            "EkEKEG5ld19hdWRpb19zb3VyY2UYGiABKAsyJS5saXZla2l0LnByb3RvLk5l",
            "d0F1ZGlvU291cmNlUmVzcG9uc2VIABJHChNjYXB0dXJlX2F1ZGlvX2ZyYW1l",
            "GBsgASgLMigubGl2ZWtpdC5wcm90by5DYXB0dXJlQXVkaW9GcmFtZVJlc3Bv",
            "bnNlSAASRQoSY2xlYXJfYXVkaW9fYnVmZmVyGBwgASgLMicubGl2ZWtpdC5w",
            "cm90by5DbGVhckF1ZGlvQnVmZmVyUmVzcG9uc2VIABJHChNuZXdfYXVkaW9f",
            "cmVzYW1wbGVyGB0gASgLMigubGl2ZWtpdC5wcm90by5OZXdBdWRpb1Jlc2Ft",
            "cGxlclJlc3BvbnNlSAASRQoScmVtaXhfYW5kX3Jlc2FtcGxlGB4gASgLMicu",
            "bGl2ZWtpdC5wcm90by5SZW1peEFuZFJlc2FtcGxlUmVzcG9uc2VIABJaCh1h",
            "dWRpb19zdHJlYW1fZnJvbV9wYXJ0aWNpcGFudBgfIAEoCzIxLmxpdmVraXQu",
            "cHJvdG8uQXVkaW9TdHJlYW1Gcm9tUGFydGljaXBhbnRSZXNwb25zZUgAEisK",
            "BGUyZWUYICABKAsyGy5saXZla2l0LnByb3RvLkUyZWVSZXNwb25zZUgAEkMK",
            "EW5ld19zb3hfcmVzYW1wbGVyGCEgASgLMiYubGl2ZWtpdC5wcm90by5OZXdT",
            "b3hSZXNhbXBsZXJSZXNwb25zZUgAEkUKEnB1c2hfc294X3Jlc2FtcGxlchgi",
            "IAEoCzInLmxpdmVraXQucHJvdG8uUHVzaFNveFJlc2FtcGxlclJlc3BvbnNl",
            "SAASRwoTZmx1c2hfc294X3Jlc2FtcGxlchgjIAEoCzIoLmxpdmVraXQucHJv",
            "dG8uRmx1c2hTb3hSZXNhbXBsZXJSZXNwb25zZUgAEkMKEXNlbmRfY2hhdF9t",
            "ZXNzYWdlGCQgASgLMiYubGl2ZWtpdC5wcm90by5TZW5kQ2hhdE1lc3NhZ2VS",
            "ZXNwb25zZUgAEjgKC3BlcmZvcm1fcnBjGCUgASgLMiEubGl2ZWtpdC5wcm90",
            "by5QZXJmb3JtUnBjUmVzcG9uc2VIABJHChNyZWdpc3Rlcl9ycGNfbWV0aG9k",
            "GCYgASgLMigubGl2ZWtpdC5wcm90by5SZWdpc3RlclJwY01ldGhvZFJlc3Bv",
            "bnNlSAASSwoVdW5yZWdpc3Rlcl9ycGNfbWV0aG9kGCcgASgLMioubGl2ZWtp",
            "dC5wcm90by5VbnJlZ2lzdGVyUnBjTWV0aG9kUmVzcG9uc2VIABJcCh5ycGNf",
            "bWV0aG9kX2ludm9jYXRpb25fcmVzcG9uc2UYKCABKAsyMi5saXZla2l0LnBy",
            "b3RvLlJwY01ldGhvZEludm9jYXRpb25SZXNwb25zZVJlc3BvbnNlSABCCQoH",
            "bWVzc2FnZSKKCwoIRmZpRXZlbnQSLgoKcm9vbV9ldmVudBgBIAEoCzIYLmxp",
            "dmVraXQucHJvdG8uUm9vbUV2ZW50SAASMAoLdHJhY2tfZXZlbnQYAiABKAsy",
            "GS5saXZla2l0LnByb3RvLlRyYWNrRXZlbnRIABI9ChJ2aWRlb19zdHJlYW1f",
            "ZXZlbnQYAyABKAsyHy5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtRXZlbnRI",
            "ABI9ChJhdWRpb19zdHJlYW1fZXZlbnQYBCABKAsyHy5saXZla2l0LnByb3Rv",
            "LkF1ZGlvU3RyZWFtRXZlbnRIABIxCgdjb25uZWN0GAUgASgLMh4ubGl2ZWtp",
            "dC5wcm90by5Db25uZWN0Q2FsbGJhY2tIABI3CgpkaXNjb25uZWN0GAcgASgL",
            "MiEubGl2ZWtpdC5wcm90by5EaXNjb25uZWN0Q2FsbGJhY2tIABIxCgdkaXNw",
            "b3NlGAggASgLMh4ubGl2ZWtpdC5wcm90by5EaXNwb3NlQ2FsbGJhY2tIABI8",
            "Cg1wdWJsaXNoX3RyYWNrGAkgASgLMiMubGl2ZWtpdC5wcm90by5QdWJsaXNo",
            "VHJhY2tDYWxsYmFja0gAEkAKD3VucHVibGlzaF90cmFjaxgKIAEoCzIlLmxp",
            "dmVraXQucHJvdG8uVW5wdWJsaXNoVHJhY2tDYWxsYmFja0gAEjoKDHB1Ymxp",
            "c2hfZGF0YRgLIAEoCzIiLmxpdmVraXQucHJvdG8uUHVibGlzaERhdGFDYWxs",
            "YmFja0gAEkwKFXB1Ymxpc2hfdHJhbnNjcmlwdGlvbhgMIAEoCzIrLmxpdmVr",
            "aXQucHJvdG8uUHVibGlzaFRyYW5zY3JpcHRpb25DYWxsYmFja0gAEkcKE2Nh",
            "cHR1cmVfYXVkaW9fZnJhbWUYDSABKAsyKC5saXZla2l0LnByb3RvLkNhcHR1",
            "cmVBdWRpb0ZyYW1lQ2FsbGJhY2tIABJFChJzZXRfbG9jYWxfbWV0YWRhdGEY",
            "DiABKAsyJy5saXZla2l0LnByb3RvLlNldExvY2FsTWV0YWRhdGFDYWxsYmFj",
            "a0gAEj0KDnNldF9sb2NhbF9uYW1lGA8gASgLMiMubGl2ZWtpdC5wcm90by5T",
            "ZXRMb2NhbE5hbWVDYWxsYmFja0gAEkkKFHNldF9sb2NhbF9hdHRyaWJ1dGVz",
            "GBAgASgLMikubGl2ZWtpdC5wcm90by5TZXRMb2NhbEF0dHJpYnV0ZXNDYWxs",
            "YmFja0gAEjQKCWdldF9zdGF0cxgRIAEoCzIfLmxpdmVraXQucHJvdG8uR2V0",
            "U3RhdHNDYWxsYmFja0gAEicKBGxvZ3MYEiABKAsyFy5saXZla2l0LnByb3Rv",
            "LkxvZ0JhdGNoSAASQwoRZ2V0X3Nlc3Npb25fc3RhdHMYEyABKAsyJi5saXZl",
            "a2l0LnByb3RvLkdldFNlc3Npb25TdGF0c0NhbGxiYWNrSAASJQoFcGFuaWMY",
            "FCABKAsyFC5saXZla2l0LnByb3RvLlBhbmljSAASQQoQcHVibGlzaF9zaXBf",
            "ZHRtZhgVIAEoCzIlLmxpdmVraXQucHJvdG8uUHVibGlzaFNpcER0bWZDYWxs",
            "YmFja0gAEj4KDGNoYXRfbWVzc2FnZRgWIAEoCzImLmxpdmVraXQucHJvdG8u",
            "U2VuZENoYXRNZXNzYWdlQ2FsbGJhY2tIABI4CgtwZXJmb3JtX3JwYxgXIAEo",
            "CzIhLmxpdmVraXQucHJvdG8uUGVyZm9ybVJwY0NhbGxiYWNrSAASSAoVcnBj",
            "X21ldGhvZF9pbnZvY2F0aW9uGBggASgLMicubGl2ZWtpdC5wcm90by5ScGNN",
            "ZXRob2RJbnZvY2F0aW9uRXZlbnRIAEIJCgdtZXNzYWdlIh8KDkRpc3Bvc2VS",
            "ZXF1ZXN0Eg0KBWFzeW5jGAEgAigIIiMKD0Rpc3Bvc2VSZXNwb25zZRIQCghh",
            "c3luY19pZBgBIAEoBCIjCg9EaXNwb3NlQ2FsbGJhY2sSEAoIYXN5bmNfaWQY",
            "ASACKAQihQEKCUxvZ1JlY29yZBImCgVsZXZlbBgBIAIoDjIXLmxpdmVraXQu",
            "cHJvdG8uTG9nTGV2ZWwSDgoGdGFyZ2V0GAIgAigJEhMKC21vZHVsZV9wYXRo",
            "GAMgASgJEgwKBGZpbGUYBCABKAkSDAoEbGluZRgFIAEoDRIPCgdtZXNzYWdl",
            "GAYgAigJIjUKCExvZ0JhdGNoEikKB3JlY29yZHMYASADKAsyGC5saXZla2l0",
            "LnByb3RvLkxvZ1JlY29yZCIYCgVQYW5pYxIPCgdtZXNzYWdlGAEgAigJKlMK",
            "CExvZ0xldmVsEg0KCUxPR19FUlJPUhAAEgwKCExPR19XQVJOEAESDAoITE9H",
            "X0lORk8QAhINCglMT0dfREVCVUcQAxINCglMT0dfVFJBQ0UQBEIQqgINTGl2",
            "ZUtpdC5Qcm90bw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LiveKit.Proto.E2EeReflection.Descriptor, global::LiveKit.Proto.TrackReflection.Descriptor, global::LiveKit.Proto.RoomReflection.Descriptor, global::LiveKit.Proto.VideoFrameReflection.Descriptor, global::LiveKit.Proto.AudioFrameReflection.Descriptor, global::LiveKit.Proto.RpcReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LiveKit.Proto.LogLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiRequest), global::LiveKit.Proto.FfiRequest.Parser, new[]{ "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "PublishData", "SetSubscribed", "SetLocalMetadata", "SetLocalName", "SetLocalAttributes", "GetSessionStats", "PublishTranscription", "PublishSipDtmf", "CreateVideoTrack", "CreateAudioTrack", "LocalTrackMute", "EnableRemoteTrack", "GetStats", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "VideoConvert", "VideoStreamFromParticipant", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "ClearAudioBuffer", "NewAudioResampler", "RemixAndResample", "E2Ee", "AudioStreamFromParticipant", "NewSoxResampler", "PushSoxResampler", "FlushSoxResampler", "SendChatMessage", "EditChatMessage", "PerformRpc", "RegisterRpcMethod", "UnregisterRpcMethod", "RpcMethodInvocationResponse" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiResponse), global::LiveKit.Proto.FfiResponse.Parser, new[]{ "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "PublishData", "SetSubscribed", "SetLocalMetadata", "SetLocalName", "SetLocalAttributes", "GetSessionStats", "PublishTranscription", "PublishSipDtmf", "CreateVideoTrack", "CreateAudioTrack", "LocalTrackMute", "EnableRemoteTrack", "GetStats", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "VideoConvert", "VideoStreamFromParticipant", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "ClearAudioBuffer", "NewAudioResampler", "RemixAndResample", "AudioStreamFromParticipant", "E2Ee", "NewSoxResampler", "PushSoxResampler", "FlushSoxResampler", "SendChatMessage", "PerformRpc", "RegisterRpcMethod", "UnregisterRpcMethod", "RpcMethodInvocationResponse" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiEvent), global::LiveKit.Proto.FfiEvent.Parser, new[]{ "RoomEvent", "TrackEvent", "VideoStreamEvent", "AudioStreamEvent", "Connect", "Disconnect", "Dispose", "PublishTrack", "UnpublishTrack", "PublishData", "PublishTranscription", "CaptureAudioFrame", "SetLocalMetadata", "SetLocalName", "SetLocalAttributes", "GetStats", "Logs", "GetSessionStats", "Panic", "PublishSipDtmf", "ChatMessage", "PerformRpc", "RpcMethodInvocation" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeRequest), global::LiveKit.Proto.DisposeRequest.Parser, new[]{ "Async" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeResponse), global::LiveKit.Proto.DisposeResponse.Parser, new[]{ "AsyncId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeCallback), global::LiveKit.Proto.DisposeCallback.Parser, new[]{ "AsyncId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.LogRecord), global::LiveKit.Proto.LogRecord.Parser, new[]{ "Level", "Target", "ModulePath", "File", "Line", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.LogBatch), global::LiveKit.Proto.LogBatch.Parser, new[]{ "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.Panic), global::LiveKit.Proto.Panic.Parser, new[]{ "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LogLevel {
    [pbr::OriginalName("LOG_ERROR")] LogError = 0,
    [pbr::OriginalName("LOG_WARN")] LogWarn = 1,
    [pbr::OriginalName("LOG_INFO")] LogInfo = 2,
    [pbr::OriginalName("LOG_DEBUG")] LogDebug = 3,
    [pbr::OriginalName("LOG_TRACE")] LogTrace = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// This is the input of livekit_ffi_request function
  /// We always expect a response (FFIResponse, even if it's empty)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiRequest : pb::IMessage<FfiRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiRequest> _parser = new pb::MessageParser<FfiRequest>(() => new FfiRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest(FfiRequest other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.SetSubscribed:
          SetSubscribed = other.SetSubscribed.Clone();
          break;
        case MessageOneofCase.SetLocalMetadata:
          SetLocalMetadata = other.SetLocalMetadata.Clone();
          break;
        case MessageOneofCase.SetLocalName:
          SetLocalName = other.SetLocalName.Clone();
          break;
        case MessageOneofCase.SetLocalAttributes:
          SetLocalAttributes = other.SetLocalAttributes.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.PublishSipDtmf:
          PublishSipDtmf = other.PublishSipDtmf.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.LocalTrackMute:
          LocalTrackMute = other.LocalTrackMute.Clone();
          break;
        case MessageOneofCase.EnableRemoteTrack:
          EnableRemoteTrack = other.EnableRemoteTrack.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.VideoConvert:
          VideoConvert = other.VideoConvert.Clone();
          break;
        case MessageOneofCase.VideoStreamFromParticipant:
          VideoStreamFromParticipant = other.VideoStreamFromParticipant.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.ClearAudioBuffer:
          ClearAudioBuffer = other.ClearAudioBuffer.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
        case MessageOneofCase.E2Ee:
          E2Ee = other.E2Ee.Clone();
          break;
        case MessageOneofCase.AudioStreamFromParticipant:
          AudioStreamFromParticipant = other.AudioStreamFromParticipant.Clone();
          break;
        case MessageOneofCase.NewSoxResampler:
          NewSoxResampler = other.NewSoxResampler.Clone();
          break;
        case MessageOneofCase.PushSoxResampler:
          PushSoxResampler = other.PushSoxResampler.Clone();
          break;
        case MessageOneofCase.FlushSoxResampler:
          FlushSoxResampler = other.FlushSoxResampler.Clone();
          break;
        case MessageOneofCase.SendChatMessage:
          SendChatMessage = other.SendChatMessage.Clone();
          break;
        case MessageOneofCase.EditChatMessage:
          EditChatMessage = other.EditChatMessage.Clone();
          break;
        case MessageOneofCase.PerformRpc:
          PerformRpc = other.PerformRpc.Clone();
          break;
        case MessageOneofCase.RegisterRpcMethod:
          RegisterRpcMethod = other.RegisterRpcMethod.Clone();
          break;
        case MessageOneofCase.UnregisterRpcMethod:
          UnregisterRpcMethod = other.UnregisterRpcMethod.Clone();
          break;
        case MessageOneofCase.RpcMethodInvocationResponse:
          RpcMethodInvocationResponse = other.RpcMethodInvocationResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest Clone() {
      return new FfiRequest(this);
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeRequest Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectRequest Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectRequest Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackRequest PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackRequest UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataRequest PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "set_subscribed" field.</summary>
    public const int SetSubscribedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetSubscribedRequest SetSubscribed {
      get { return messageCase_ == MessageOneofCase.SetSubscribed ? (global::LiveKit.Proto.SetSubscribedRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetSubscribed;
      }
    }

    /// <summary>Field number for the "set_local_metadata" field.</summary>
    public const int SetLocalMetadataFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalMetadataRequest SetLocalMetadata {
      get { return messageCase_ == MessageOneofCase.SetLocalMetadata ? (global::LiveKit.Proto.SetLocalMetadataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalMetadata;
      }
    }

    /// <summary>Field number for the "set_local_name" field.</summary>
    public const int SetLocalNameFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalNameRequest SetLocalName {
      get { return messageCase_ == MessageOneofCase.SetLocalName ? (global::LiveKit.Proto.SetLocalNameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalName;
      }
    }

    /// <summary>Field number for the "set_local_attributes" field.</summary>
    public const int SetLocalAttributesFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalAttributesRequest SetLocalAttributes {
      get { return messageCase_ == MessageOneofCase.SetLocalAttributes ? (global::LiveKit.Proto.SetLocalAttributesRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalAttributes;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsRequest GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionRequest PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "publish_sip_dtmf" field.</summary>
    public const int PublishSipDtmfFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishSipDtmfRequest PublishSipDtmf {
      get { return messageCase_ == MessageOneofCase.PublishSipDtmf ? (global::LiveKit.Proto.PublishSipDtmfRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishSipDtmf;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 15;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackRequest CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackRequest CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "local_track_mute" field.</summary>
    public const int LocalTrackMuteFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LocalTrackMuteRequest LocalTrackMute {
      get { return messageCase_ == MessageOneofCase.LocalTrackMute ? (global::LiveKit.Proto.LocalTrackMuteRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.LocalTrackMute;
      }
    }

    /// <summary>Field number for the "enable_remote_track" field.</summary>
    public const int EnableRemoteTrackFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.EnableRemoteTrackRequest EnableRemoteTrack {
      get { return messageCase_ == MessageOneofCase.EnableRemoteTrack ? (global::LiveKit.Proto.EnableRemoteTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.EnableRemoteTrack;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsRequest GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 20;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamRequest NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceRequest NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameRequest CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "video_convert" field.</summary>
    public const int VideoConvertFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoConvertRequest VideoConvert {
      get { return messageCase_ == MessageOneofCase.VideoConvert ? (global::LiveKit.Proto.VideoConvertRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoConvert;
      }
    }

    /// <summary>Field number for the "video_stream_from_participant" field.</summary>
    public const int VideoStreamFromParticipantFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoStreamFromParticipantRequest VideoStreamFromParticipant {
      get { return messageCase_ == MessageOneofCase.VideoStreamFromParticipant ? (global::LiveKit.Proto.VideoStreamFromParticipantRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoStreamFromParticipant;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 25;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamRequest NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceRequest NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameRequest CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "clear_audio_buffer" field.</summary>
    public const int ClearAudioBufferFieldNumber = 28;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ClearAudioBufferRequest ClearAudioBuffer {
      get { return messageCase_ == MessageOneofCase.ClearAudioBuffer ? (global::LiveKit.Proto.ClearAudioBufferRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ClearAudioBuffer;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerRequest NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleRequest RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    /// <summary>Field number for the "e2ee" field.</summary>
    public const int E2EeFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.E2eeRequest E2Ee {
      get { return messageCase_ == MessageOneofCase.E2Ee ? (global::LiveKit.Proto.E2eeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.E2Ee;
      }
    }

    /// <summary>Field number for the "audio_stream_from_participant" field.</summary>
    public const int AudioStreamFromParticipantFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AudioStreamFromParticipantRequest AudioStreamFromParticipant {
      get { return messageCase_ == MessageOneofCase.AudioStreamFromParticipant ? (global::LiveKit.Proto.AudioStreamFromParticipantRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AudioStreamFromParticipant;
      }
    }

    /// <summary>Field number for the "new_sox_resampler" field.</summary>
    public const int NewSoxResamplerFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewSoxResamplerRequest NewSoxResampler {
      get { return messageCase_ == MessageOneofCase.NewSoxResampler ? (global::LiveKit.Proto.NewSoxResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewSoxResampler;
      }
    }

    /// <summary>Field number for the "push_sox_resampler" field.</summary>
    public const int PushSoxResamplerFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PushSoxResamplerRequest PushSoxResampler {
      get { return messageCase_ == MessageOneofCase.PushSoxResampler ? (global::LiveKit.Proto.PushSoxResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PushSoxResampler;
      }
    }

    /// <summary>Field number for the "flush_sox_resampler" field.</summary>
    public const int FlushSoxResamplerFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.FlushSoxResamplerRequest FlushSoxResampler {
      get { return messageCase_ == MessageOneofCase.FlushSoxResampler ? (global::LiveKit.Proto.FlushSoxResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.FlushSoxResampler;
      }
    }

    /// <summary>Field number for the "send_chat_message" field.</summary>
    public const int SendChatMessageFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SendChatMessageRequest SendChatMessage {
      get { return messageCase_ == MessageOneofCase.SendChatMessage ? (global::LiveKit.Proto.SendChatMessageRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SendChatMessage;
      }
    }

    /// <summary>Field number for the "edit_chat_message" field.</summary>
    public const int EditChatMessageFieldNumber = 37;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.EditChatMessageRequest EditChatMessage {
      get { return messageCase_ == MessageOneofCase.EditChatMessage ? (global::LiveKit.Proto.EditChatMessageRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.EditChatMessage;
      }
    }

    /// <summary>Field number for the "perform_rpc" field.</summary>
    public const int PerformRpcFieldNumber = 38;
    /// <summary>
    /// RPC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PerformRpcRequest PerformRpc {
      get { return messageCase_ == MessageOneofCase.PerformRpc ? (global::LiveKit.Proto.PerformRpcRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PerformRpc;
      }
    }

    /// <summary>Field number for the "register_rpc_method" field.</summary>
    public const int RegisterRpcMethodFieldNumber = 39;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RegisterRpcMethodRequest RegisterRpcMethod {
      get { return messageCase_ == MessageOneofCase.RegisterRpcMethod ? (global::LiveKit.Proto.RegisterRpcMethodRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RegisterRpcMethod;
      }
    }

    /// <summary>Field number for the "unregister_rpc_method" field.</summary>
    public const int UnregisterRpcMethodFieldNumber = 40;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnregisterRpcMethodRequest UnregisterRpcMethod {
      get { return messageCase_ == MessageOneofCase.UnregisterRpcMethod ? (global::LiveKit.Proto.UnregisterRpcMethodRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnregisterRpcMethod;
      }
    }

    /// <summary>Field number for the "rpc_method_invocation_response" field.</summary>
    public const int RpcMethodInvocationResponseFieldNumber = 41;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RpcMethodInvocationResponseRequest RpcMethodInvocationResponse {
      get { return messageCase_ == MessageOneofCase.RpcMethodInvocationResponse ? (global::LiveKit.Proto.RpcMethodInvocationResponseRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RpcMethodInvocationResponse;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      PublishData = 7,
      SetSubscribed = 8,
      SetLocalMetadata = 9,
      SetLocalName = 10,
      SetLocalAttributes = 11,
      GetSessionStats = 12,
      PublishTranscription = 13,
      PublishSipDtmf = 14,
      CreateVideoTrack = 15,
      CreateAudioTrack = 16,
      LocalTrackMute = 17,
      EnableRemoteTrack = 18,
      GetStats = 19,
      NewVideoStream = 20,
      NewVideoSource = 21,
      CaptureVideoFrame = 22,
      VideoConvert = 23,
      VideoStreamFromParticipant = 24,
      NewAudioStream = 25,
      NewAudioSource = 26,
      CaptureAudioFrame = 27,
      ClearAudioBuffer = 28,
      NewAudioResampler = 29,
      RemixAndResample = 30,
      E2Ee = 31,
      AudioStreamFromParticipant = 32,
      NewSoxResampler = 33,
      PushSoxResampler = 34,
      FlushSoxResampler = 35,
      SendChatMessage = 36,
      EditChatMessage = 37,
      PerformRpc = 38,
      RegisterRpcMethod = 39,
      UnregisterRpcMethod = 40,
      RpcMethodInvocationResponse = 41,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(SetSubscribed, other.SetSubscribed)) return false;
      if (!object.Equals(SetLocalMetadata, other.SetLocalMetadata)) return false;
      if (!object.Equals(SetLocalName, other.SetLocalName)) return false;
      if (!object.Equals(SetLocalAttributes, other.SetLocalAttributes)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(PublishSipDtmf, other.PublishSipDtmf)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(LocalTrackMute, other.LocalTrackMute)) return false;
      if (!object.Equals(EnableRemoteTrack, other.EnableRemoteTrack)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(VideoConvert, other.VideoConvert)) return false;
      if (!object.Equals(VideoStreamFromParticipant, other.VideoStreamFromParticipant)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(ClearAudioBuffer, other.ClearAudioBuffer)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (!object.Equals(E2Ee, other.E2Ee)) return false;
      if (!object.Equals(AudioStreamFromParticipant, other.AudioStreamFromParticipant)) return false;
      if (!object.Equals(NewSoxResampler, other.NewSoxResampler)) return false;
      if (!object.Equals(PushSoxResampler, other.PushSoxResampler)) return false;
      if (!object.Equals(FlushSoxResampler, other.FlushSoxResampler)) return false;
      if (!object.Equals(SendChatMessage, other.SendChatMessage)) return false;
      if (!object.Equals(EditChatMessage, other.EditChatMessage)) return false;
      if (!object.Equals(PerformRpc, other.PerformRpc)) return false;
      if (!object.Equals(RegisterRpcMethod, other.RegisterRpcMethod)) return false;
      if (!object.Equals(UnregisterRpcMethod, other.UnregisterRpcMethod)) return false;
      if (!object.Equals(RpcMethodInvocationResponse, other.RpcMethodInvocationResponse)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetSubscribed) hash ^= SetSubscribed.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) hash ^= SetLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalName) hash ^= SetLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) hash ^= SetLocalAttributes.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) hash ^= PublishSipDtmf.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.LocalTrackMute) hash ^= LocalTrackMute.GetHashCode();
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) hash ^= EnableRemoteTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoConvert) hash ^= VideoConvert.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) hash ^= VideoStreamFromParticipant.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) hash ^= ClearAudioBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      if (messageCase_ == MessageOneofCase.E2Ee) hash ^= E2Ee.GetHashCode();
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) hash ^= AudioStreamFromParticipant.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewSoxResampler) hash ^= NewSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.PushSoxResampler) hash ^= PushSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) hash ^= FlushSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.SendChatMessage) hash ^= SendChatMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.EditChatMessage) hash ^= EditChatMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.PerformRpc) hash ^= PerformRpc.GetHashCode();
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) hash ^= RegisterRpcMethod.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) hash ^= UnregisterRpcMethod.GetHashCode();
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) hash ^= RpcMethodInvocationResponse.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(90);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(98);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(106);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(114);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(122);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.EditChatMessage) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(EditChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(90);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(98);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(106);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(114);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(122);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.EditChatMessage) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(EditChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.EditChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EditChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiRequest other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeRequest();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectRequest();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectRequest();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackRequest();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackRequest();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataRequest();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.SetSubscribed:
          if (SetSubscribed == null) {
            SetSubscribed = new global::LiveKit.Proto.SetSubscribedRequest();
          }
          SetSubscribed.MergeFrom(other.SetSubscribed);
          break;
        case MessageOneofCase.SetLocalMetadata:
          if (SetLocalMetadata == null) {
            SetLocalMetadata = new global::LiveKit.Proto.SetLocalMetadataRequest();
          }
          SetLocalMetadata.MergeFrom(other.SetLocalMetadata);
          break;
        case MessageOneofCase.SetLocalName:
          if (SetLocalName == null) {
            SetLocalName = new global::LiveKit.Proto.SetLocalNameRequest();
          }
          SetLocalName.MergeFrom(other.SetLocalName);
          break;
        case MessageOneofCase.SetLocalAttributes:
          if (SetLocalAttributes == null) {
            SetLocalAttributes = new global::LiveKit.Proto.SetLocalAttributesRequest();
          }
          SetLocalAttributes.MergeFrom(other.SetLocalAttributes);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsRequest();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionRequest();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.PublishSipDtmf:
          if (PublishSipDtmf == null) {
            PublishSipDtmf = new global::LiveKit.Proto.PublishSipDtmfRequest();
          }
          PublishSipDtmf.MergeFrom(other.PublishSipDtmf);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackRequest();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackRequest();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.LocalTrackMute:
          if (LocalTrackMute == null) {
            LocalTrackMute = new global::LiveKit.Proto.LocalTrackMuteRequest();
          }
          LocalTrackMute.MergeFrom(other.LocalTrackMute);
          break;
        case MessageOneofCase.EnableRemoteTrack:
          if (EnableRemoteTrack == null) {
            EnableRemoteTrack = new global::LiveKit.Proto.EnableRemoteTrackRequest();
          }
          EnableRemoteTrack.MergeFrom(other.EnableRemoteTrack);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsRequest();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamRequest();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceRequest();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameRequest();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.VideoConvert:
          if (VideoConvert == null) {
            VideoConvert = new global::LiveKit.Proto.VideoConvertRequest();
          }
          VideoConvert.MergeFrom(other.VideoConvert);
          break;
        case MessageOneofCase.VideoStreamFromParticipant:
          if (VideoStreamFromParticipant == null) {
            VideoStreamFromParticipant = new global::LiveKit.Proto.VideoStreamFromParticipantRequest();
          }
          VideoStreamFromParticipant.MergeFrom(other.VideoStreamFromParticipant);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamRequest();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceRequest();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameRequest();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.ClearAudioBuffer:
          if (ClearAudioBuffer == null) {
            ClearAudioBuffer = new global::LiveKit.Proto.ClearAudioBufferRequest();
          }
          ClearAudioBuffer.MergeFrom(other.ClearAudioBuffer);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerRequest();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleRequest();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
        case MessageOneofCase.E2Ee:
          if (E2Ee == null) {
            E2Ee = new global::LiveKit.Proto.E2eeRequest();
          }
          E2Ee.MergeFrom(other.E2Ee);
          break;
        case MessageOneofCase.AudioStreamFromParticipant:
          if (AudioStreamFromParticipant == null) {
            AudioStreamFromParticipant = new global::LiveKit.Proto.AudioStreamFromParticipantRequest();
          }
          AudioStreamFromParticipant.MergeFrom(other.AudioStreamFromParticipant);
          break;
        case MessageOneofCase.NewSoxResampler:
          if (NewSoxResampler == null) {
            NewSoxResampler = new global::LiveKit.Proto.NewSoxResamplerRequest();
          }
          NewSoxResampler.MergeFrom(other.NewSoxResampler);
          break;
        case MessageOneofCase.PushSoxResampler:
          if (PushSoxResampler == null) {
            PushSoxResampler = new global::LiveKit.Proto.PushSoxResamplerRequest();
          }
          PushSoxResampler.MergeFrom(other.PushSoxResampler);
          break;
        case MessageOneofCase.FlushSoxResampler:
          if (FlushSoxResampler == null) {
            FlushSoxResampler = new global::LiveKit.Proto.FlushSoxResamplerRequest();
          }
          FlushSoxResampler.MergeFrom(other.FlushSoxResampler);
          break;
        case MessageOneofCase.SendChatMessage:
          if (SendChatMessage == null) {
            SendChatMessage = new global::LiveKit.Proto.SendChatMessageRequest();
          }
          SendChatMessage.MergeFrom(other.SendChatMessage);
          break;
        case MessageOneofCase.EditChatMessage:
          if (EditChatMessage == null) {
            EditChatMessage = new global::LiveKit.Proto.EditChatMessageRequest();
          }
          EditChatMessage.MergeFrom(other.EditChatMessage);
          break;
        case MessageOneofCase.PerformRpc:
          if (PerformRpc == null) {
            PerformRpc = new global::LiveKit.Proto.PerformRpcRequest();
          }
          PerformRpc.MergeFrom(other.PerformRpc);
          break;
        case MessageOneofCase.RegisterRpcMethod:
          if (RegisterRpcMethod == null) {
            RegisterRpcMethod = new global::LiveKit.Proto.RegisterRpcMethodRequest();
          }
          RegisterRpcMethod.MergeFrom(other.RegisterRpcMethod);
          break;
        case MessageOneofCase.UnregisterRpcMethod:
          if (UnregisterRpcMethod == null) {
            UnregisterRpcMethod = new global::LiveKit.Proto.UnregisterRpcMethodRequest();
          }
          UnregisterRpcMethod.MergeFrom(other.UnregisterRpcMethod);
          break;
        case MessageOneofCase.RpcMethodInvocationResponse:
          if (RpcMethodInvocationResponse == null) {
            RpcMethodInvocationResponse = new global::LiveKit.Proto.RpcMethodInvocationResponseRequest();
          }
          RpcMethodInvocationResponse.MergeFrom(other.RpcMethodInvocationResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataRequest subBuilder = new global::LiveKit.Proto.PublishDataRequest();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedRequest subBuilder = new global::LiveKit.Proto.SetSubscribedRequest();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.SetLocalMetadataRequest subBuilder = new global::LiveKit.Proto.SetLocalMetadataRequest();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.SetLocalNameRequest subBuilder = new global::LiveKit.Proto.SetLocalNameRequest();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.SetLocalAttributesRequest subBuilder = new global::LiveKit.Proto.SetLocalAttributesRequest();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.GetSessionStatsRequest subBuilder = new global::LiveKit.Proto.GetSessionStatsRequest();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.PublishTranscriptionRequest subBuilder = new global::LiveKit.Proto.PublishTranscriptionRequest();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.PublishSipDtmfRequest subBuilder = new global::LiveKit.Proto.PublishSipDtmfRequest();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.LocalTrackMuteRequest subBuilder = new global::LiveKit.Proto.LocalTrackMuteRequest();
            if (messageCase_ == MessageOneofCase.LocalTrackMute) {
              subBuilder.MergeFrom(LocalTrackMute);
            }
            input.ReadMessage(subBuilder);
            LocalTrackMute = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.EnableRemoteTrackRequest subBuilder = new global::LiveKit.Proto.EnableRemoteTrackRequest();
            if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
              subBuilder.MergeFrom(EnableRemoteTrack);
            }
            input.ReadMessage(subBuilder);
            EnableRemoteTrack = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetStatsRequest subBuilder = new global::LiveKit.Proto.GetStatsRequest();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.VideoConvertRequest subBuilder = new global::LiveKit.Proto.VideoConvertRequest();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.VideoStreamFromParticipantRequest subBuilder = new global::LiveKit.Proto.VideoStreamFromParticipantRequest();
            if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
              subBuilder.MergeFrom(VideoStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            VideoStreamFromParticipant = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 226: {
            global::LiveKit.Proto.ClearAudioBufferRequest subBuilder = new global::LiveKit.Proto.ClearAudioBufferRequest();
            if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
              subBuilder.MergeFrom(ClearAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            ClearAudioBuffer = subBuilder;
            break;
          }
          case 234: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 242: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 250: {
            global::LiveKit.Proto.E2eeRequest subBuilder = new global::LiveKit.Proto.E2eeRequest();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
          case 258: {
            global::LiveKit.Proto.AudioStreamFromParticipantRequest subBuilder = new global::LiveKit.Proto.AudioStreamFromParticipantRequest();
            if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
              subBuilder.MergeFrom(AudioStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            AudioStreamFromParticipant = subBuilder;
            break;
          }
          case 266: {
            global::LiveKit.Proto.NewSoxResamplerRequest subBuilder = new global::LiveKit.Proto.NewSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewSoxResampler) {
              subBuilder.MergeFrom(NewSoxResampler);
            }
            input.ReadMessage(subBuilder);
            NewSoxResampler = subBuilder;
            break;
          }
          case 274: {
            global::LiveKit.Proto.PushSoxResamplerRequest subBuilder = new global::LiveKit.Proto.PushSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.PushSoxResampler) {
              subBuilder.MergeFrom(PushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            PushSoxResampler = subBuilder;
            break;
          }
          case 282: {
            global::LiveKit.Proto.FlushSoxResamplerRequest subBuilder = new global::LiveKit.Proto.FlushSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
              subBuilder.MergeFrom(FlushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            FlushSoxResampler = subBuilder;
            break;
          }
          case 290: {
            global::LiveKit.Proto.SendChatMessageRequest subBuilder = new global::LiveKit.Proto.SendChatMessageRequest();
            if (messageCase_ == MessageOneofCase.SendChatMessage) {
              subBuilder.MergeFrom(SendChatMessage);
            }
            input.ReadMessage(subBuilder);
            SendChatMessage = subBuilder;
            break;
          }
          case 298: {
            global::LiveKit.Proto.EditChatMessageRequest subBuilder = new global::LiveKit.Proto.EditChatMessageRequest();
            if (messageCase_ == MessageOneofCase.EditChatMessage) {
              subBuilder.MergeFrom(EditChatMessage);
            }
            input.ReadMessage(subBuilder);
            EditChatMessage = subBuilder;
            break;
          }
          case 306: {
            global::LiveKit.Proto.PerformRpcRequest subBuilder = new global::LiveKit.Proto.PerformRpcRequest();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 314: {
            global::LiveKit.Proto.RegisterRpcMethodRequest subBuilder = new global::LiveKit.Proto.RegisterRpcMethodRequest();
            if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
              subBuilder.MergeFrom(RegisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            RegisterRpcMethod = subBuilder;
            break;
          }
          case 322: {
            global::LiveKit.Proto.UnregisterRpcMethodRequest subBuilder = new global::LiveKit.Proto.UnregisterRpcMethodRequest();
            if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
              subBuilder.MergeFrom(UnregisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            UnregisterRpcMethod = subBuilder;
            break;
          }
          case 330: {
            global::LiveKit.Proto.RpcMethodInvocationResponseRequest subBuilder = new global::LiveKit.Proto.RpcMethodInvocationResponseRequest();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
              subBuilder.MergeFrom(RpcMethodInvocationResponse);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocationResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataRequest subBuilder = new global::LiveKit.Proto.PublishDataRequest();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedRequest subBuilder = new global::LiveKit.Proto.SetSubscribedRequest();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.SetLocalMetadataRequest subBuilder = new global::LiveKit.Proto.SetLocalMetadataRequest();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.SetLocalNameRequest subBuilder = new global::LiveKit.Proto.SetLocalNameRequest();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.SetLocalAttributesRequest subBuilder = new global::LiveKit.Proto.SetLocalAttributesRequest();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.GetSessionStatsRequest subBuilder = new global::LiveKit.Proto.GetSessionStatsRequest();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.PublishTranscriptionRequest subBuilder = new global::LiveKit.Proto.PublishTranscriptionRequest();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.PublishSipDtmfRequest subBuilder = new global::LiveKit.Proto.PublishSipDtmfRequest();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.LocalTrackMuteRequest subBuilder = new global::LiveKit.Proto.LocalTrackMuteRequest();
            if (messageCase_ == MessageOneofCase.LocalTrackMute) {
              subBuilder.MergeFrom(LocalTrackMute);
            }
            input.ReadMessage(subBuilder);
            LocalTrackMute = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.EnableRemoteTrackRequest subBuilder = new global::LiveKit.Proto.EnableRemoteTrackRequest();
            if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
              subBuilder.MergeFrom(EnableRemoteTrack);
            }
            input.ReadMessage(subBuilder);
            EnableRemoteTrack = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetStatsRequest subBuilder = new global::LiveKit.Proto.GetStatsRequest();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.VideoConvertRequest subBuilder = new global::LiveKit.Proto.VideoConvertRequest();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.VideoStreamFromParticipantRequest subBuilder = new global::LiveKit.Proto.VideoStreamFromParticipantRequest();
            if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
              subBuilder.MergeFrom(VideoStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            VideoStreamFromParticipant = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 226: {
            global::LiveKit.Proto.ClearAudioBufferRequest subBuilder = new global::LiveKit.Proto.ClearAudioBufferRequest();
            if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
              subBuilder.MergeFrom(ClearAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            ClearAudioBuffer = subBuilder;
            break;
          }
          case 234: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 242: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 250: {
            global::LiveKit.Proto.E2eeRequest subBuilder = new global::LiveKit.Proto.E2eeRequest();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
          case 258: {
            global::LiveKit.Proto.AudioStreamFromParticipantRequest subBuilder = new global::LiveKit.Proto.AudioStreamFromParticipantRequest();
            if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
              subBuilder.MergeFrom(AudioStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            AudioStreamFromParticipant = subBuilder;
            break;
          }
          case 266: {
            global::LiveKit.Proto.NewSoxResamplerRequest subBuilder = new global::LiveKit.Proto.NewSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewSoxResampler) {
              subBuilder.MergeFrom(NewSoxResampler);
            }
            input.ReadMessage(subBuilder);
            NewSoxResampler = subBuilder;
            break;
          }
          case 274: {
            global::LiveKit.Proto.PushSoxResamplerRequest subBuilder = new global::LiveKit.Proto.PushSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.PushSoxResampler) {
              subBuilder.MergeFrom(PushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            PushSoxResampler = subBuilder;
            break;
          }
          case 282: {
            global::LiveKit.Proto.FlushSoxResamplerRequest subBuilder = new global::LiveKit.Proto.FlushSoxResamplerRequest();
            if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
              subBuilder.MergeFrom(FlushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            FlushSoxResampler = subBuilder;
            break;
          }
          case 290: {
            global::LiveKit.Proto.SendChatMessageRequest subBuilder = new global::LiveKit.Proto.SendChatMessageRequest();
            if (messageCase_ == MessageOneofCase.SendChatMessage) {
              subBuilder.MergeFrom(SendChatMessage);
            }
            input.ReadMessage(subBuilder);
            SendChatMessage = subBuilder;
            break;
          }
          case 298: {
            global::LiveKit.Proto.EditChatMessageRequest subBuilder = new global::LiveKit.Proto.EditChatMessageRequest();
            if (messageCase_ == MessageOneofCase.EditChatMessage) {
              subBuilder.MergeFrom(EditChatMessage);
            }
            input.ReadMessage(subBuilder);
            EditChatMessage = subBuilder;
            break;
          }
          case 306: {
            global::LiveKit.Proto.PerformRpcRequest subBuilder = new global::LiveKit.Proto.PerformRpcRequest();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 314: {
            global::LiveKit.Proto.RegisterRpcMethodRequest subBuilder = new global::LiveKit.Proto.RegisterRpcMethodRequest();
            if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
              subBuilder.MergeFrom(RegisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            RegisterRpcMethod = subBuilder;
            break;
          }
          case 322: {
            global::LiveKit.Proto.UnregisterRpcMethodRequest subBuilder = new global::LiveKit.Proto.UnregisterRpcMethodRequest();
            if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
              subBuilder.MergeFrom(UnregisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            UnregisterRpcMethod = subBuilder;
            break;
          }
          case 330: {
            global::LiveKit.Proto.RpcMethodInvocationResponseRequest subBuilder = new global::LiveKit.Proto.RpcMethodInvocationResponseRequest();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
              subBuilder.MergeFrom(RpcMethodInvocationResponse);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocationResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is the output of livekit_ffi_request function.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiResponse : pb::IMessage<FfiResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiResponse> _parser = new pb::MessageParser<FfiResponse>(() => new FfiResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse(FfiResponse other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.SetSubscribed:
          SetSubscribed = other.SetSubscribed.Clone();
          break;
        case MessageOneofCase.SetLocalMetadata:
          SetLocalMetadata = other.SetLocalMetadata.Clone();
          break;
        case MessageOneofCase.SetLocalName:
          SetLocalName = other.SetLocalName.Clone();
          break;
        case MessageOneofCase.SetLocalAttributes:
          SetLocalAttributes = other.SetLocalAttributes.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.PublishSipDtmf:
          PublishSipDtmf = other.PublishSipDtmf.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.LocalTrackMute:
          LocalTrackMute = other.LocalTrackMute.Clone();
          break;
        case MessageOneofCase.EnableRemoteTrack:
          EnableRemoteTrack = other.EnableRemoteTrack.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.VideoConvert:
          VideoConvert = other.VideoConvert.Clone();
          break;
        case MessageOneofCase.VideoStreamFromParticipant:
          VideoStreamFromParticipant = other.VideoStreamFromParticipant.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.ClearAudioBuffer:
          ClearAudioBuffer = other.ClearAudioBuffer.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
        case MessageOneofCase.AudioStreamFromParticipant:
          AudioStreamFromParticipant = other.AudioStreamFromParticipant.Clone();
          break;
        case MessageOneofCase.E2Ee:
          E2Ee = other.E2Ee.Clone();
          break;
        case MessageOneofCase.NewSoxResampler:
          NewSoxResampler = other.NewSoxResampler.Clone();
          break;
        case MessageOneofCase.PushSoxResampler:
          PushSoxResampler = other.PushSoxResampler.Clone();
          break;
        case MessageOneofCase.FlushSoxResampler:
          FlushSoxResampler = other.FlushSoxResampler.Clone();
          break;
        case MessageOneofCase.SendChatMessage:
          SendChatMessage = other.SendChatMessage.Clone();
          break;
        case MessageOneofCase.PerformRpc:
          PerformRpc = other.PerformRpc.Clone();
          break;
        case MessageOneofCase.RegisterRpcMethod:
          RegisterRpcMethod = other.RegisterRpcMethod.Clone();
          break;
        case MessageOneofCase.UnregisterRpcMethod:
          UnregisterRpcMethod = other.UnregisterRpcMethod.Clone();
          break;
        case MessageOneofCase.RpcMethodInvocationResponse:
          RpcMethodInvocationResponse = other.RpcMethodInvocationResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse Clone() {
      return new FfiResponse(this);
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeResponse Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectResponse Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectResponse Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackResponse PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackResponse UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataResponse PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "set_subscribed" field.</summary>
    public const int SetSubscribedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetSubscribedResponse SetSubscribed {
      get { return messageCase_ == MessageOneofCase.SetSubscribed ? (global::LiveKit.Proto.SetSubscribedResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetSubscribed;
      }
    }

    /// <summary>Field number for the "set_local_metadata" field.</summary>
    public const int SetLocalMetadataFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalMetadataResponse SetLocalMetadata {
      get { return messageCase_ == MessageOneofCase.SetLocalMetadata ? (global::LiveKit.Proto.SetLocalMetadataResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalMetadata;
      }
    }

    /// <summary>Field number for the "set_local_name" field.</summary>
    public const int SetLocalNameFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalNameResponse SetLocalName {
      get { return messageCase_ == MessageOneofCase.SetLocalName ? (global::LiveKit.Proto.SetLocalNameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalName;
      }
    }

    /// <summary>Field number for the "set_local_attributes" field.</summary>
    public const int SetLocalAttributesFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalAttributesResponse SetLocalAttributes {
      get { return messageCase_ == MessageOneofCase.SetLocalAttributes ? (global::LiveKit.Proto.SetLocalAttributesResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalAttributes;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsResponse GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionResponse PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "publish_sip_dtmf" field.</summary>
    public const int PublishSipDtmfFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishSipDtmfResponse PublishSipDtmf {
      get { return messageCase_ == MessageOneofCase.PublishSipDtmf ? (global::LiveKit.Proto.PublishSipDtmfResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishSipDtmf;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 15;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackResponse CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackResponse CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "local_track_mute" field.</summary>
    public const int LocalTrackMuteFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LocalTrackMuteResponse LocalTrackMute {
      get { return messageCase_ == MessageOneofCase.LocalTrackMute ? (global::LiveKit.Proto.LocalTrackMuteResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.LocalTrackMute;
      }
    }

    /// <summary>Field number for the "enable_remote_track" field.</summary>
    public const int EnableRemoteTrackFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.EnableRemoteTrackResponse EnableRemoteTrack {
      get { return messageCase_ == MessageOneofCase.EnableRemoteTrack ? (global::LiveKit.Proto.EnableRemoteTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.EnableRemoteTrack;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsResponse GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 20;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamResponse NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceResponse NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameResponse CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "video_convert" field.</summary>
    public const int VideoConvertFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoConvertResponse VideoConvert {
      get { return messageCase_ == MessageOneofCase.VideoConvert ? (global::LiveKit.Proto.VideoConvertResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoConvert;
      }
    }

    /// <summary>Field number for the "video_stream_from_participant" field.</summary>
    public const int VideoStreamFromParticipantFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoStreamFromParticipantResponse VideoStreamFromParticipant {
      get { return messageCase_ == MessageOneofCase.VideoStreamFromParticipant ? (global::LiveKit.Proto.VideoStreamFromParticipantResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoStreamFromParticipant;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 25;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamResponse NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceResponse NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameResponse CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "clear_audio_buffer" field.</summary>
    public const int ClearAudioBufferFieldNumber = 28;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ClearAudioBufferResponse ClearAudioBuffer {
      get { return messageCase_ == MessageOneofCase.ClearAudioBuffer ? (global::LiveKit.Proto.ClearAudioBufferResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ClearAudioBuffer;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerResponse NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleResponse RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    /// <summary>Field number for the "audio_stream_from_participant" field.</summary>
    public const int AudioStreamFromParticipantFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AudioStreamFromParticipantResponse AudioStreamFromParticipant {
      get { return messageCase_ == MessageOneofCase.AudioStreamFromParticipant ? (global::LiveKit.Proto.AudioStreamFromParticipantResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AudioStreamFromParticipant;
      }
    }

    /// <summary>Field number for the "e2ee" field.</summary>
    public const int E2EeFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.E2eeResponse E2Ee {
      get { return messageCase_ == MessageOneofCase.E2Ee ? (global::LiveKit.Proto.E2eeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.E2Ee;
      }
    }

    /// <summary>Field number for the "new_sox_resampler" field.</summary>
    public const int NewSoxResamplerFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewSoxResamplerResponse NewSoxResampler {
      get { return messageCase_ == MessageOneofCase.NewSoxResampler ? (global::LiveKit.Proto.NewSoxResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewSoxResampler;
      }
    }

    /// <summary>Field number for the "push_sox_resampler" field.</summary>
    public const int PushSoxResamplerFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PushSoxResamplerResponse PushSoxResampler {
      get { return messageCase_ == MessageOneofCase.PushSoxResampler ? (global::LiveKit.Proto.PushSoxResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PushSoxResampler;
      }
    }

    /// <summary>Field number for the "flush_sox_resampler" field.</summary>
    public const int FlushSoxResamplerFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.FlushSoxResamplerResponse FlushSoxResampler {
      get { return messageCase_ == MessageOneofCase.FlushSoxResampler ? (global::LiveKit.Proto.FlushSoxResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.FlushSoxResampler;
      }
    }

    /// <summary>Field number for the "send_chat_message" field.</summary>
    public const int SendChatMessageFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SendChatMessageResponse SendChatMessage {
      get { return messageCase_ == MessageOneofCase.SendChatMessage ? (global::LiveKit.Proto.SendChatMessageResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SendChatMessage;
      }
    }

    /// <summary>Field number for the "perform_rpc" field.</summary>
    public const int PerformRpcFieldNumber = 37;
    /// <summary>
    /// RPC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PerformRpcResponse PerformRpc {
      get { return messageCase_ == MessageOneofCase.PerformRpc ? (global::LiveKit.Proto.PerformRpcResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PerformRpc;
      }
    }

    /// <summary>Field number for the "register_rpc_method" field.</summary>
    public const int RegisterRpcMethodFieldNumber = 38;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RegisterRpcMethodResponse RegisterRpcMethod {
      get { return messageCase_ == MessageOneofCase.RegisterRpcMethod ? (global::LiveKit.Proto.RegisterRpcMethodResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RegisterRpcMethod;
      }
    }

    /// <summary>Field number for the "unregister_rpc_method" field.</summary>
    public const int UnregisterRpcMethodFieldNumber = 39;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnregisterRpcMethodResponse UnregisterRpcMethod {
      get { return messageCase_ == MessageOneofCase.UnregisterRpcMethod ? (global::LiveKit.Proto.UnregisterRpcMethodResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnregisterRpcMethod;
      }
    }

    /// <summary>Field number for the "rpc_method_invocation_response" field.</summary>
    public const int RpcMethodInvocationResponseFieldNumber = 40;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RpcMethodInvocationResponseResponse RpcMethodInvocationResponse {
      get { return messageCase_ == MessageOneofCase.RpcMethodInvocationResponse ? (global::LiveKit.Proto.RpcMethodInvocationResponseResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RpcMethodInvocationResponse;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      PublishData = 7,
      SetSubscribed = 8,
      SetLocalMetadata = 9,
      SetLocalName = 10,
      SetLocalAttributes = 11,
      GetSessionStats = 12,
      PublishTranscription = 13,
      PublishSipDtmf = 14,
      CreateVideoTrack = 15,
      CreateAudioTrack = 16,
      LocalTrackMute = 17,
      EnableRemoteTrack = 18,
      GetStats = 19,
      NewVideoStream = 20,
      NewVideoSource = 21,
      CaptureVideoFrame = 22,
      VideoConvert = 23,
      VideoStreamFromParticipant = 24,
      NewAudioStream = 25,
      NewAudioSource = 26,
      CaptureAudioFrame = 27,
      ClearAudioBuffer = 28,
      NewAudioResampler = 29,
      RemixAndResample = 30,
      AudioStreamFromParticipant = 31,
      E2Ee = 32,
      NewSoxResampler = 33,
      PushSoxResampler = 34,
      FlushSoxResampler = 35,
      SendChatMessage = 36,
      PerformRpc = 37,
      RegisterRpcMethod = 38,
      UnregisterRpcMethod = 39,
      RpcMethodInvocationResponse = 40,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(SetSubscribed, other.SetSubscribed)) return false;
      if (!object.Equals(SetLocalMetadata, other.SetLocalMetadata)) return false;
      if (!object.Equals(SetLocalName, other.SetLocalName)) return false;
      if (!object.Equals(SetLocalAttributes, other.SetLocalAttributes)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(PublishSipDtmf, other.PublishSipDtmf)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(LocalTrackMute, other.LocalTrackMute)) return false;
      if (!object.Equals(EnableRemoteTrack, other.EnableRemoteTrack)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(VideoConvert, other.VideoConvert)) return false;
      if (!object.Equals(VideoStreamFromParticipant, other.VideoStreamFromParticipant)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(ClearAudioBuffer, other.ClearAudioBuffer)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (!object.Equals(AudioStreamFromParticipant, other.AudioStreamFromParticipant)) return false;
      if (!object.Equals(E2Ee, other.E2Ee)) return false;
      if (!object.Equals(NewSoxResampler, other.NewSoxResampler)) return false;
      if (!object.Equals(PushSoxResampler, other.PushSoxResampler)) return false;
      if (!object.Equals(FlushSoxResampler, other.FlushSoxResampler)) return false;
      if (!object.Equals(SendChatMessage, other.SendChatMessage)) return false;
      if (!object.Equals(PerformRpc, other.PerformRpc)) return false;
      if (!object.Equals(RegisterRpcMethod, other.RegisterRpcMethod)) return false;
      if (!object.Equals(UnregisterRpcMethod, other.UnregisterRpcMethod)) return false;
      if (!object.Equals(RpcMethodInvocationResponse, other.RpcMethodInvocationResponse)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetSubscribed) hash ^= SetSubscribed.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) hash ^= SetLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalName) hash ^= SetLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) hash ^= SetLocalAttributes.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) hash ^= PublishSipDtmf.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.LocalTrackMute) hash ^= LocalTrackMute.GetHashCode();
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) hash ^= EnableRemoteTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoConvert) hash ^= VideoConvert.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) hash ^= VideoStreamFromParticipant.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) hash ^= ClearAudioBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) hash ^= AudioStreamFromParticipant.GetHashCode();
      if (messageCase_ == MessageOneofCase.E2Ee) hash ^= E2Ee.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewSoxResampler) hash ^= NewSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.PushSoxResampler) hash ^= PushSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) hash ^= FlushSoxResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.SendChatMessage) hash ^= SendChatMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.PerformRpc) hash ^= PerformRpc.GetHashCode();
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) hash ^= RegisterRpcMethod.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) hash ^= UnregisterRpcMethod.GetHashCode();
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) hash ^= RpcMethodInvocationResponse.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(90);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(98);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(106);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(114);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(122);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(90);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(98);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(106);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(114);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(122);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.LocalTrackMute) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalTrackMute);
      }
      if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EnableRemoteTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClearAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AudioStreamFromParticipant);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2Ee);
      }
      if (messageCase_ == MessageOneofCase.NewSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.PushSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FlushSoxResampler);
      }
      if (messageCase_ == MessageOneofCase.SendChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnregisterRpcMethod);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RpcMethodInvocationResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiResponse other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeResponse();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectResponse();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectResponse();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackResponse();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackResponse();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataResponse();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.SetSubscribed:
          if (SetSubscribed == null) {
            SetSubscribed = new global::LiveKit.Proto.SetSubscribedResponse();
          }
          SetSubscribed.MergeFrom(other.SetSubscribed);
          break;
        case MessageOneofCase.SetLocalMetadata:
          if (SetLocalMetadata == null) {
            SetLocalMetadata = new global::LiveKit.Proto.SetLocalMetadataResponse();
          }
          SetLocalMetadata.MergeFrom(other.SetLocalMetadata);
          break;
        case MessageOneofCase.SetLocalName:
          if (SetLocalName == null) {
            SetLocalName = new global::LiveKit.Proto.SetLocalNameResponse();
          }
          SetLocalName.MergeFrom(other.SetLocalName);
          break;
        case MessageOneofCase.SetLocalAttributes:
          if (SetLocalAttributes == null) {
            SetLocalAttributes = new global::LiveKit.Proto.SetLocalAttributesResponse();
          }
          SetLocalAttributes.MergeFrom(other.SetLocalAttributes);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsResponse();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionResponse();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.PublishSipDtmf:
          if (PublishSipDtmf == null) {
            PublishSipDtmf = new global::LiveKit.Proto.PublishSipDtmfResponse();
          }
          PublishSipDtmf.MergeFrom(other.PublishSipDtmf);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackResponse();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackResponse();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.LocalTrackMute:
          if (LocalTrackMute == null) {
            LocalTrackMute = new global::LiveKit.Proto.LocalTrackMuteResponse();
          }
          LocalTrackMute.MergeFrom(other.LocalTrackMute);
          break;
        case MessageOneofCase.EnableRemoteTrack:
          if (EnableRemoteTrack == null) {
            EnableRemoteTrack = new global::LiveKit.Proto.EnableRemoteTrackResponse();
          }
          EnableRemoteTrack.MergeFrom(other.EnableRemoteTrack);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsResponse();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamResponse();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceResponse();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameResponse();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.VideoConvert:
          if (VideoConvert == null) {
            VideoConvert = new global::LiveKit.Proto.VideoConvertResponse();
          }
          VideoConvert.MergeFrom(other.VideoConvert);
          break;
        case MessageOneofCase.VideoStreamFromParticipant:
          if (VideoStreamFromParticipant == null) {
            VideoStreamFromParticipant = new global::LiveKit.Proto.VideoStreamFromParticipantResponse();
          }
          VideoStreamFromParticipant.MergeFrom(other.VideoStreamFromParticipant);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamResponse();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceResponse();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameResponse();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.ClearAudioBuffer:
          if (ClearAudioBuffer == null) {
            ClearAudioBuffer = new global::LiveKit.Proto.ClearAudioBufferResponse();
          }
          ClearAudioBuffer.MergeFrom(other.ClearAudioBuffer);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerResponse();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleResponse();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
        case MessageOneofCase.AudioStreamFromParticipant:
          if (AudioStreamFromParticipant == null) {
            AudioStreamFromParticipant = new global::LiveKit.Proto.AudioStreamFromParticipantResponse();
          }
          AudioStreamFromParticipant.MergeFrom(other.AudioStreamFromParticipant);
          break;
        case MessageOneofCase.E2Ee:
          if (E2Ee == null) {
            E2Ee = new global::LiveKit.Proto.E2eeResponse();
          }
          E2Ee.MergeFrom(other.E2Ee);
          break;
        case MessageOneofCase.NewSoxResampler:
          if (NewSoxResampler == null) {
            NewSoxResampler = new global::LiveKit.Proto.NewSoxResamplerResponse();
          }
          NewSoxResampler.MergeFrom(other.NewSoxResampler);
          break;
        case MessageOneofCase.PushSoxResampler:
          if (PushSoxResampler == null) {
            PushSoxResampler = new global::LiveKit.Proto.PushSoxResamplerResponse();
          }
          PushSoxResampler.MergeFrom(other.PushSoxResampler);
          break;
        case MessageOneofCase.FlushSoxResampler:
          if (FlushSoxResampler == null) {
            FlushSoxResampler = new global::LiveKit.Proto.FlushSoxResamplerResponse();
          }
          FlushSoxResampler.MergeFrom(other.FlushSoxResampler);
          break;
        case MessageOneofCase.SendChatMessage:
          if (SendChatMessage == null) {
            SendChatMessage = new global::LiveKit.Proto.SendChatMessageResponse();
          }
          SendChatMessage.MergeFrom(other.SendChatMessage);
          break;
        case MessageOneofCase.PerformRpc:
          if (PerformRpc == null) {
            PerformRpc = new global::LiveKit.Proto.PerformRpcResponse();
          }
          PerformRpc.MergeFrom(other.PerformRpc);
          break;
        case MessageOneofCase.RegisterRpcMethod:
          if (RegisterRpcMethod == null) {
            RegisterRpcMethod = new global::LiveKit.Proto.RegisterRpcMethodResponse();
          }
          RegisterRpcMethod.MergeFrom(other.RegisterRpcMethod);
          break;
        case MessageOneofCase.UnregisterRpcMethod:
          if (UnregisterRpcMethod == null) {
            UnregisterRpcMethod = new global::LiveKit.Proto.UnregisterRpcMethodResponse();
          }
          UnregisterRpcMethod.MergeFrom(other.UnregisterRpcMethod);
          break;
        case MessageOneofCase.RpcMethodInvocationResponse:
          if (RpcMethodInvocationResponse == null) {
            RpcMethodInvocationResponse = new global::LiveKit.Proto.RpcMethodInvocationResponseResponse();
          }
          RpcMethodInvocationResponse.MergeFrom(other.RpcMethodInvocationResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataResponse subBuilder = new global::LiveKit.Proto.PublishDataResponse();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedResponse subBuilder = new global::LiveKit.Proto.SetSubscribedResponse();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.SetLocalMetadataResponse subBuilder = new global::LiveKit.Proto.SetLocalMetadataResponse();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.SetLocalNameResponse subBuilder = new global::LiveKit.Proto.SetLocalNameResponse();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.SetLocalAttributesResponse subBuilder = new global::LiveKit.Proto.SetLocalAttributesResponse();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.GetSessionStatsResponse subBuilder = new global::LiveKit.Proto.GetSessionStatsResponse();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.PublishTranscriptionResponse subBuilder = new global::LiveKit.Proto.PublishTranscriptionResponse();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.PublishSipDtmfResponse subBuilder = new global::LiveKit.Proto.PublishSipDtmfResponse();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.LocalTrackMuteResponse subBuilder = new global::LiveKit.Proto.LocalTrackMuteResponse();
            if (messageCase_ == MessageOneofCase.LocalTrackMute) {
              subBuilder.MergeFrom(LocalTrackMute);
            }
            input.ReadMessage(subBuilder);
            LocalTrackMute = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.EnableRemoteTrackResponse subBuilder = new global::LiveKit.Proto.EnableRemoteTrackResponse();
            if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
              subBuilder.MergeFrom(EnableRemoteTrack);
            }
            input.ReadMessage(subBuilder);
            EnableRemoteTrack = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetStatsResponse subBuilder = new global::LiveKit.Proto.GetStatsResponse();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.VideoConvertResponse subBuilder = new global::LiveKit.Proto.VideoConvertResponse();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.VideoStreamFromParticipantResponse subBuilder = new global::LiveKit.Proto.VideoStreamFromParticipantResponse();
            if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
              subBuilder.MergeFrom(VideoStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            VideoStreamFromParticipant = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 226: {
            global::LiveKit.Proto.ClearAudioBufferResponse subBuilder = new global::LiveKit.Proto.ClearAudioBufferResponse();
            if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
              subBuilder.MergeFrom(ClearAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            ClearAudioBuffer = subBuilder;
            break;
          }
          case 234: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 242: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 250: {
            global::LiveKit.Proto.AudioStreamFromParticipantResponse subBuilder = new global::LiveKit.Proto.AudioStreamFromParticipantResponse();
            if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
              subBuilder.MergeFrom(AudioStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            AudioStreamFromParticipant = subBuilder;
            break;
          }
          case 258: {
            global::LiveKit.Proto.E2eeResponse subBuilder = new global::LiveKit.Proto.E2eeResponse();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
          case 266: {
            global::LiveKit.Proto.NewSoxResamplerResponse subBuilder = new global::LiveKit.Proto.NewSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewSoxResampler) {
              subBuilder.MergeFrom(NewSoxResampler);
            }
            input.ReadMessage(subBuilder);
            NewSoxResampler = subBuilder;
            break;
          }
          case 274: {
            global::LiveKit.Proto.PushSoxResamplerResponse subBuilder = new global::LiveKit.Proto.PushSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.PushSoxResampler) {
              subBuilder.MergeFrom(PushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            PushSoxResampler = subBuilder;
            break;
          }
          case 282: {
            global::LiveKit.Proto.FlushSoxResamplerResponse subBuilder = new global::LiveKit.Proto.FlushSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
              subBuilder.MergeFrom(FlushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            FlushSoxResampler = subBuilder;
            break;
          }
          case 290: {
            global::LiveKit.Proto.SendChatMessageResponse subBuilder = new global::LiveKit.Proto.SendChatMessageResponse();
            if (messageCase_ == MessageOneofCase.SendChatMessage) {
              subBuilder.MergeFrom(SendChatMessage);
            }
            input.ReadMessage(subBuilder);
            SendChatMessage = subBuilder;
            break;
          }
          case 298: {
            global::LiveKit.Proto.PerformRpcResponse subBuilder = new global::LiveKit.Proto.PerformRpcResponse();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 306: {
            global::LiveKit.Proto.RegisterRpcMethodResponse subBuilder = new global::LiveKit.Proto.RegisterRpcMethodResponse();
            if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
              subBuilder.MergeFrom(RegisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            RegisterRpcMethod = subBuilder;
            break;
          }
          case 314: {
            global::LiveKit.Proto.UnregisterRpcMethodResponse subBuilder = new global::LiveKit.Proto.UnregisterRpcMethodResponse();
            if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
              subBuilder.MergeFrom(UnregisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            UnregisterRpcMethod = subBuilder;
            break;
          }
          case 322: {
            global::LiveKit.Proto.RpcMethodInvocationResponseResponse subBuilder = new global::LiveKit.Proto.RpcMethodInvocationResponseResponse();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
              subBuilder.MergeFrom(RpcMethodInvocationResponse);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocationResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataResponse subBuilder = new global::LiveKit.Proto.PublishDataResponse();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedResponse subBuilder = new global::LiveKit.Proto.SetSubscribedResponse();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.SetLocalMetadataResponse subBuilder = new global::LiveKit.Proto.SetLocalMetadataResponse();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.SetLocalNameResponse subBuilder = new global::LiveKit.Proto.SetLocalNameResponse();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.SetLocalAttributesResponse subBuilder = new global::LiveKit.Proto.SetLocalAttributesResponse();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.GetSessionStatsResponse subBuilder = new global::LiveKit.Proto.GetSessionStatsResponse();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.PublishTranscriptionResponse subBuilder = new global::LiveKit.Proto.PublishTranscriptionResponse();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.PublishSipDtmfResponse subBuilder = new global::LiveKit.Proto.PublishSipDtmfResponse();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.LocalTrackMuteResponse subBuilder = new global::LiveKit.Proto.LocalTrackMuteResponse();
            if (messageCase_ == MessageOneofCase.LocalTrackMute) {
              subBuilder.MergeFrom(LocalTrackMute);
            }
            input.ReadMessage(subBuilder);
            LocalTrackMute = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.EnableRemoteTrackResponse subBuilder = new global::LiveKit.Proto.EnableRemoteTrackResponse();
            if (messageCase_ == MessageOneofCase.EnableRemoteTrack) {
              subBuilder.MergeFrom(EnableRemoteTrack);
            }
            input.ReadMessage(subBuilder);
            EnableRemoteTrack = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetStatsResponse subBuilder = new global::LiveKit.Proto.GetStatsResponse();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.VideoConvertResponse subBuilder = new global::LiveKit.Proto.VideoConvertResponse();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.VideoStreamFromParticipantResponse subBuilder = new global::LiveKit.Proto.VideoStreamFromParticipantResponse();
            if (messageCase_ == MessageOneofCase.VideoStreamFromParticipant) {
              subBuilder.MergeFrom(VideoStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            VideoStreamFromParticipant = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 226: {
            global::LiveKit.Proto.ClearAudioBufferResponse subBuilder = new global::LiveKit.Proto.ClearAudioBufferResponse();
            if (messageCase_ == MessageOneofCase.ClearAudioBuffer) {
              subBuilder.MergeFrom(ClearAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            ClearAudioBuffer = subBuilder;
            break;
          }
          case 234: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 242: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 250: {
            global::LiveKit.Proto.AudioStreamFromParticipantResponse subBuilder = new global::LiveKit.Proto.AudioStreamFromParticipantResponse();
            if (messageCase_ == MessageOneofCase.AudioStreamFromParticipant) {
              subBuilder.MergeFrom(AudioStreamFromParticipant);
            }
            input.ReadMessage(subBuilder);
            AudioStreamFromParticipant = subBuilder;
            break;
          }
          case 258: {
            global::LiveKit.Proto.E2eeResponse subBuilder = new global::LiveKit.Proto.E2eeResponse();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
          case 266: {
            global::LiveKit.Proto.NewSoxResamplerResponse subBuilder = new global::LiveKit.Proto.NewSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewSoxResampler) {
              subBuilder.MergeFrom(NewSoxResampler);
            }
            input.ReadMessage(subBuilder);
            NewSoxResampler = subBuilder;
            break;
          }
          case 274: {
            global::LiveKit.Proto.PushSoxResamplerResponse subBuilder = new global::LiveKit.Proto.PushSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.PushSoxResampler) {
              subBuilder.MergeFrom(PushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            PushSoxResampler = subBuilder;
            break;
          }
          case 282: {
            global::LiveKit.Proto.FlushSoxResamplerResponse subBuilder = new global::LiveKit.Proto.FlushSoxResamplerResponse();
            if (messageCase_ == MessageOneofCase.FlushSoxResampler) {
              subBuilder.MergeFrom(FlushSoxResampler);
            }
            input.ReadMessage(subBuilder);
            FlushSoxResampler = subBuilder;
            break;
          }
          case 290: {
            global::LiveKit.Proto.SendChatMessageResponse subBuilder = new global::LiveKit.Proto.SendChatMessageResponse();
            if (messageCase_ == MessageOneofCase.SendChatMessage) {
              subBuilder.MergeFrom(SendChatMessage);
            }
            input.ReadMessage(subBuilder);
            SendChatMessage = subBuilder;
            break;
          }
          case 298: {
            global::LiveKit.Proto.PerformRpcResponse subBuilder = new global::LiveKit.Proto.PerformRpcResponse();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 306: {
            global::LiveKit.Proto.RegisterRpcMethodResponse subBuilder = new global::LiveKit.Proto.RegisterRpcMethodResponse();
            if (messageCase_ == MessageOneofCase.RegisterRpcMethod) {
              subBuilder.MergeFrom(RegisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            RegisterRpcMethod = subBuilder;
            break;
          }
          case 314: {
            global::LiveKit.Proto.UnregisterRpcMethodResponse subBuilder = new global::LiveKit.Proto.UnregisterRpcMethodResponse();
            if (messageCase_ == MessageOneofCase.UnregisterRpcMethod) {
              subBuilder.MergeFrom(UnregisterRpcMethod);
            }
            input.ReadMessage(subBuilder);
            UnregisterRpcMethod = subBuilder;
            break;
          }
          case 322: {
            global::LiveKit.Proto.RpcMethodInvocationResponseResponse subBuilder = new global::LiveKit.Proto.RpcMethodInvocationResponseResponse();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocationResponse) {
              subBuilder.MergeFrom(RpcMethodInvocationResponse);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocationResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// To minimize complexity, participant events are not included in the protocol.
  /// It is easily deducible from the room events and it turned out that is is easier to implement
  /// on the ffi client side.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiEvent : pb::IMessage<FfiEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiEvent> _parser = new pb::MessageParser<FfiEvent>(() => new FfiEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent(FfiEvent other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          RoomEvent = other.RoomEvent.Clone();
          break;
        case MessageOneofCase.TrackEvent:
          TrackEvent = other.TrackEvent.Clone();
          break;
        case MessageOneofCase.VideoStreamEvent:
          VideoStreamEvent = other.VideoStreamEvent.Clone();
          break;
        case MessageOneofCase.AudioStreamEvent:
          AudioStreamEvent = other.AudioStreamEvent.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.SetLocalMetadata:
          SetLocalMetadata = other.SetLocalMetadata.Clone();
          break;
        case MessageOneofCase.SetLocalName:
          SetLocalName = other.SetLocalName.Clone();
          break;
        case MessageOneofCase.SetLocalAttributes:
          SetLocalAttributes = other.SetLocalAttributes.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.Logs:
          Logs = other.Logs.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.Panic:
          Panic = other.Panic.Clone();
          break;
        case MessageOneofCase.PublishSipDtmf:
          PublishSipDtmf = other.PublishSipDtmf.Clone();
          break;
        case MessageOneofCase.ChatMessage:
          ChatMessage = other.ChatMessage.Clone();
          break;
        case MessageOneofCase.PerformRpc:
          PerformRpc = other.PerformRpc.Clone();
          break;
        case MessageOneofCase.RpcMethodInvocation:
          RpcMethodInvocation = other.RpcMethodInvocation.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent Clone() {
      return new FfiEvent(this);
    }

    /// <summary>Field number for the "room_event" field.</summary>
    public const int RoomEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RoomEvent RoomEvent {
      get { return messageCase_ == MessageOneofCase.RoomEvent ? (global::LiveKit.Proto.RoomEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomEvent;
      }
    }

    /// <summary>Field number for the "track_event" field.</summary>
    public const int TrackEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.TrackEvent TrackEvent {
      get { return messageCase_ == MessageOneofCase.TrackEvent ? (global::LiveKit.Proto.TrackEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.TrackEvent;
      }
    }

    /// <summary>Field number for the "video_stream_event" field.</summary>
    public const int VideoStreamEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoStreamEvent VideoStreamEvent {
      get { return messageCase_ == MessageOneofCase.VideoStreamEvent ? (global::LiveKit.Proto.VideoStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoStreamEvent;
      }
    }

    /// <summary>Field number for the "audio_stream_event" field.</summary>
    public const int AudioStreamEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AudioStreamEvent AudioStreamEvent {
      get { return messageCase_ == MessageOneofCase.AudioStreamEvent ? (global::LiveKit.Proto.AudioStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AudioStreamEvent;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectCallback Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectCallback Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeCallback Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackCallback PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackCallback UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataCallback PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionCallback PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameCallback CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "set_local_metadata" field.</summary>
    public const int SetLocalMetadataFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalMetadataCallback SetLocalMetadata {
      get { return messageCase_ == MessageOneofCase.SetLocalMetadata ? (global::LiveKit.Proto.SetLocalMetadataCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalMetadata;
      }
    }

    /// <summary>Field number for the "set_local_name" field.</summary>
    public const int SetLocalNameFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalNameCallback SetLocalName {
      get { return messageCase_ == MessageOneofCase.SetLocalName ? (global::LiveKit.Proto.SetLocalNameCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalName;
      }
    }

    /// <summary>Field number for the "set_local_attributes" field.</summary>
    public const int SetLocalAttributesFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetLocalAttributesCallback SetLocalAttributes {
      get { return messageCase_ == MessageOneofCase.SetLocalAttributes ? (global::LiveKit.Proto.SetLocalAttributesCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetLocalAttributes;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsCallback GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LogBatch Logs {
      get { return messageCase_ == MessageOneofCase.Logs ? (global::LiveKit.Proto.LogBatch) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Logs;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsCallback GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "panic" field.</summary>
    public const int PanicFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.Panic Panic {
      get { return messageCase_ == MessageOneofCase.Panic ? (global::LiveKit.Proto.Panic) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Panic;
      }
    }

    /// <summary>Field number for the "publish_sip_dtmf" field.</summary>
    public const int PublishSipDtmfFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishSipDtmfCallback PublishSipDtmf {
      get { return messageCase_ == MessageOneofCase.PublishSipDtmf ? (global::LiveKit.Proto.PublishSipDtmfCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishSipDtmf;
      }
    }

    /// <summary>Field number for the "chat_message" field.</summary>
    public const int ChatMessageFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SendChatMessageCallback ChatMessage {
      get { return messageCase_ == MessageOneofCase.ChatMessage ? (global::LiveKit.Proto.SendChatMessageCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ChatMessage;
      }
    }

    /// <summary>Field number for the "perform_rpc" field.</summary>
    public const int PerformRpcFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PerformRpcCallback PerformRpc {
      get { return messageCase_ == MessageOneofCase.PerformRpc ? (global::LiveKit.Proto.PerformRpcCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PerformRpc;
      }
    }

    /// <summary>Field number for the "rpc_method_invocation" field.</summary>
    public const int RpcMethodInvocationFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RpcMethodInvocationEvent RpcMethodInvocation {
      get { return messageCase_ == MessageOneofCase.RpcMethodInvocation ? (global::LiveKit.Proto.RpcMethodInvocationEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RpcMethodInvocation;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      RoomEvent = 1,
      TrackEvent = 2,
      VideoStreamEvent = 3,
      AudioStreamEvent = 4,
      Connect = 5,
      Disconnect = 7,
      Dispose = 8,
      PublishTrack = 9,
      UnpublishTrack = 10,
      PublishData = 11,
      PublishTranscription = 12,
      CaptureAudioFrame = 13,
      SetLocalMetadata = 14,
      SetLocalName = 15,
      SetLocalAttributes = 16,
      GetStats = 17,
      Logs = 18,
      GetSessionStats = 19,
      Panic = 20,
      PublishSipDtmf = 21,
      ChatMessage = 22,
      PerformRpc = 23,
      RpcMethodInvocation = 24,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomEvent, other.RoomEvent)) return false;
      if (!object.Equals(TrackEvent, other.TrackEvent)) return false;
      if (!object.Equals(VideoStreamEvent, other.VideoStreamEvent)) return false;
      if (!object.Equals(AudioStreamEvent, other.AudioStreamEvent)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(SetLocalMetadata, other.SetLocalMetadata)) return false;
      if (!object.Equals(SetLocalName, other.SetLocalName)) return false;
      if (!object.Equals(SetLocalAttributes, other.SetLocalAttributes)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(Logs, other.Logs)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(Panic, other.Panic)) return false;
      if (!object.Equals(PublishSipDtmf, other.PublishSipDtmf)) return false;
      if (!object.Equals(ChatMessage, other.ChatMessage)) return false;
      if (!object.Equals(PerformRpc, other.PerformRpc)) return false;
      if (!object.Equals(RpcMethodInvocation, other.RpcMethodInvocation)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.RoomEvent) hash ^= RoomEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.TrackEvent) hash ^= TrackEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) hash ^= VideoStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) hash ^= AudioStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) hash ^= SetLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalName) hash ^= SetLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) hash ^= SetLocalAttributes.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.Logs) hash ^= Logs.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.Panic) hash ^= Panic.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) hash ^= PublishSipDtmf.GetHashCode();
      if (messageCase_ == MessageOneofCase.ChatMessage) hash ^= ChatMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.PerformRpc) hash ^= PerformRpc.GetHashCode();
      if (messageCase_ == MessageOneofCase.RpcMethodInvocation) hash ^= RpcMethodInvocation.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(42);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(58);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(66);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(82);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(90);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(106);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(114);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(122);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Panic);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocation) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RpcMethodInvocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(42);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(58);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(66);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(82);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(90);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(106);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        output.WriteRawTag(114);
        output.WriteMessage(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        output.WriteRawTag(122);
        output.WriteMessage(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Panic);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocation) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RpcMethodInvocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.SetLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetLocalName);
      }
      if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetLocalAttributes);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Panic);
      }
      if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublishSipDtmf);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.PerformRpc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PerformRpc);
      }
      if (messageCase_ == MessageOneofCase.RpcMethodInvocation) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RpcMethodInvocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiEvent other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          if (RoomEvent == null) {
            RoomEvent = new global::LiveKit.Proto.RoomEvent();
          }
          RoomEvent.MergeFrom(other.RoomEvent);
          break;
        case MessageOneofCase.TrackEvent:
          if (TrackEvent == null) {
            TrackEvent = new global::LiveKit.Proto.TrackEvent();
          }
          TrackEvent.MergeFrom(other.TrackEvent);
          break;
        case MessageOneofCase.VideoStreamEvent:
          if (VideoStreamEvent == null) {
            VideoStreamEvent = new global::LiveKit.Proto.VideoStreamEvent();
          }
          VideoStreamEvent.MergeFrom(other.VideoStreamEvent);
          break;
        case MessageOneofCase.AudioStreamEvent:
          if (AudioStreamEvent == null) {
            AudioStreamEvent = new global::LiveKit.Proto.AudioStreamEvent();
          }
          AudioStreamEvent.MergeFrom(other.AudioStreamEvent);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectCallback();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectCallback();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeCallback();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackCallback();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackCallback();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataCallback();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionCallback();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameCallback();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.SetLocalMetadata:
          if (SetLocalMetadata == null) {
            SetLocalMetadata = new global::LiveKit.Proto.SetLocalMetadataCallback();
          }
          SetLocalMetadata.MergeFrom(other.SetLocalMetadata);
          break;
        case MessageOneofCase.SetLocalName:
          if (SetLocalName == null) {
            SetLocalName = new global::LiveKit.Proto.SetLocalNameCallback();
          }
          SetLocalName.MergeFrom(other.SetLocalName);
          break;
        case MessageOneofCase.SetLocalAttributes:
          if (SetLocalAttributes == null) {
            SetLocalAttributes = new global::LiveKit.Proto.SetLocalAttributesCallback();
          }
          SetLocalAttributes.MergeFrom(other.SetLocalAttributes);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsCallback();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.Logs:
          if (Logs == null) {
            Logs = new global::LiveKit.Proto.LogBatch();
          }
          Logs.MergeFrom(other.Logs);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsCallback();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.Panic:
          if (Panic == null) {
            Panic = new global::LiveKit.Proto.Panic();
          }
          Panic.MergeFrom(other.Panic);
          break;
        case MessageOneofCase.PublishSipDtmf:
          if (PublishSipDtmf == null) {
            PublishSipDtmf = new global::LiveKit.Proto.PublishSipDtmfCallback();
          }
          PublishSipDtmf.MergeFrom(other.PublishSipDtmf);
          break;
        case MessageOneofCase.ChatMessage:
          if (ChatMessage == null) {
            ChatMessage = new global::LiveKit.Proto.SendChatMessageCallback();
          }
          ChatMessage.MergeFrom(other.ChatMessage);
          break;
        case MessageOneofCase.PerformRpc:
          if (PerformRpc == null) {
            PerformRpc = new global::LiveKit.Proto.PerformRpcCallback();
          }
          PerformRpc.MergeFrom(other.PerformRpc);
          break;
        case MessageOneofCase.RpcMethodInvocation:
          if (RpcMethodInvocation == null) {
            RpcMethodInvocation = new global::LiveKit.Proto.RpcMethodInvocationEvent();
          }
          RpcMethodInvocation.MergeFrom(other.RpcMethodInvocation);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisconnectCallback subBuilder = new global::LiveKit.Proto.DisconnectCallback();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UnpublishTrackCallback subBuilder = new global::LiveKit.Proto.UnpublishTrackCallback();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.PublishDataCallback subBuilder = new global::LiveKit.Proto.PublishDataCallback();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionCallback subBuilder = new global::LiveKit.Proto.PublishTranscriptionCallback();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CaptureAudioFrameCallback subBuilder = new global::LiveKit.Proto.CaptureAudioFrameCallback();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.SetLocalMetadataCallback subBuilder = new global::LiveKit.Proto.SetLocalMetadataCallback();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.SetLocalNameCallback subBuilder = new global::LiveKit.Proto.SetLocalNameCallback();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.SetLocalAttributesCallback subBuilder = new global::LiveKit.Proto.SetLocalAttributesCallback();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.GetStatsCallback subBuilder = new global::LiveKit.Proto.GetStatsCallback();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.LogBatch subBuilder = new global::LiveKit.Proto.LogBatch();
            if (messageCase_ == MessageOneofCase.Logs) {
              subBuilder.MergeFrom(Logs);
            }
            input.ReadMessage(subBuilder);
            Logs = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetSessionStatsCallback subBuilder = new global::LiveKit.Proto.GetSessionStatsCallback();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.Panic subBuilder = new global::LiveKit.Proto.Panic();
            if (messageCase_ == MessageOneofCase.Panic) {
              subBuilder.MergeFrom(Panic);
            }
            input.ReadMessage(subBuilder);
            Panic = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.PublishSipDtmfCallback subBuilder = new global::LiveKit.Proto.PublishSipDtmfCallback();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.SendChatMessageCallback subBuilder = new global::LiveKit.Proto.SendChatMessageCallback();
            if (messageCase_ == MessageOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.PerformRpcCallback subBuilder = new global::LiveKit.Proto.PerformRpcCallback();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.RpcMethodInvocationEvent subBuilder = new global::LiveKit.Proto.RpcMethodInvocationEvent();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocation) {
              subBuilder.MergeFrom(RpcMethodInvocation);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocation = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisconnectCallback subBuilder = new global::LiveKit.Proto.DisconnectCallback();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UnpublishTrackCallback subBuilder = new global::LiveKit.Proto.UnpublishTrackCallback();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.PublishDataCallback subBuilder = new global::LiveKit.Proto.PublishDataCallback();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionCallback subBuilder = new global::LiveKit.Proto.PublishTranscriptionCallback();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CaptureAudioFrameCallback subBuilder = new global::LiveKit.Proto.CaptureAudioFrameCallback();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.SetLocalMetadataCallback subBuilder = new global::LiveKit.Proto.SetLocalMetadataCallback();
            if (messageCase_ == MessageOneofCase.SetLocalMetadata) {
              subBuilder.MergeFrom(SetLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            SetLocalMetadata = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.SetLocalNameCallback subBuilder = new global::LiveKit.Proto.SetLocalNameCallback();
            if (messageCase_ == MessageOneofCase.SetLocalName) {
              subBuilder.MergeFrom(SetLocalName);
            }
            input.ReadMessage(subBuilder);
            SetLocalName = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.SetLocalAttributesCallback subBuilder = new global::LiveKit.Proto.SetLocalAttributesCallback();
            if (messageCase_ == MessageOneofCase.SetLocalAttributes) {
              subBuilder.MergeFrom(SetLocalAttributes);
            }
            input.ReadMessage(subBuilder);
            SetLocalAttributes = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.GetStatsCallback subBuilder = new global::LiveKit.Proto.GetStatsCallback();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.LogBatch subBuilder = new global::LiveKit.Proto.LogBatch();
            if (messageCase_ == MessageOneofCase.Logs) {
              subBuilder.MergeFrom(Logs);
            }
            input.ReadMessage(subBuilder);
            Logs = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.GetSessionStatsCallback subBuilder = new global::LiveKit.Proto.GetSessionStatsCallback();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.Panic subBuilder = new global::LiveKit.Proto.Panic();
            if (messageCase_ == MessageOneofCase.Panic) {
              subBuilder.MergeFrom(Panic);
            }
            input.ReadMessage(subBuilder);
            Panic = subBuilder;
            break;
          }
          case 170: {
            global::LiveKit.Proto.PublishSipDtmfCallback subBuilder = new global::LiveKit.Proto.PublishSipDtmfCallback();
            if (messageCase_ == MessageOneofCase.PublishSipDtmf) {
              subBuilder.MergeFrom(PublishSipDtmf);
            }
            input.ReadMessage(subBuilder);
            PublishSipDtmf = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.SendChatMessageCallback subBuilder = new global::LiveKit.Proto.SendChatMessageCallback();
            if (messageCase_ == MessageOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.PerformRpcCallback subBuilder = new global::LiveKit.Proto.PerformRpcCallback();
            if (messageCase_ == MessageOneofCase.PerformRpc) {
              subBuilder.MergeFrom(PerformRpc);
            }
            input.ReadMessage(subBuilder);
            PerformRpc = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.RpcMethodInvocationEvent subBuilder = new global::LiveKit.Proto.RpcMethodInvocationEvent();
            if (messageCase_ == MessageOneofCase.RpcMethodInvocation) {
              subBuilder.MergeFrom(RpcMethodInvocation);
            }
            input.ReadMessage(subBuilder);
            RpcMethodInvocation = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Stop all rooms synchronously (Do we need async here?).
  /// e.g: This is used for the Unity Editor after each assemblies reload.
  /// TODO(theomonnom): Implement a debug mode where we can find all leaked handles?
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeRequest : pb::IMessage<DisposeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeRequest> _parser = new pb::MessageParser<DisposeRequest>(() => new DisposeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest(DisposeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      async_ = other.async_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest Clone() {
      return new DisposeRequest(this);
    }

    /// <summary>Field number for the "async" field.</summary>
    public const int AsyncFieldNumber = 1;
    private readonly static bool AsyncDefaultValue = false;

    private bool async_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Async {
      get { if ((_hasBits0 & 1) != 0) { return async_; } else { return AsyncDefaultValue; } }
      set {
        _hasBits0 |= 1;
        async_ = value;
      }
    }
    /// <summary>Gets whether the "async" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAsync {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "async" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAsync() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Async != other.Async) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAsync) hash ^= Async.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAsync) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAsync) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAsync) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAsync) {
        Async = other.Async;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeResponse : pb::IMessage<DisposeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeResponse> _parser = new pb::MessageParser<DisposeResponse>(() => new DisposeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse(DisposeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      asyncId_ = other.asyncId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse Clone() {
      return new DisposeResponse(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private readonly static ulong AsyncIdDefaultValue = 0UL;

    private ulong asyncId_;
    /// <summary>
    /// None if sync
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AsyncId {
      get { if ((_hasBits0 & 1) != 0) { return asyncId_; } else { return AsyncIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        asyncId_ = value;
      }
    }
    /// <summary>Gets whether the "async_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAsyncId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "async_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAsyncId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncId != other.AsyncId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAsyncId) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAsyncId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasAsyncId) {
        AsyncId = other.AsyncId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeCallback : pb::IMessage<DisposeCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeCallback> _parser = new pb::MessageParser<DisposeCallback>(() => new DisposeCallback());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback(DisposeCallback other) : this() {
      _hasBits0 = other._hasBits0;
      asyncId_ = other.asyncId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback Clone() {
      return new DisposeCallback(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private readonly static ulong AsyncIdDefaultValue = 0UL;

    private ulong asyncId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AsyncId {
      get { if ((_hasBits0 & 1) != 0) { return asyncId_; } else { return AsyncIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        asyncId_ = value;
      }
    }
    /// <summary>Gets whether the "async_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAsyncId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "async_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAsyncId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncId != other.AsyncId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAsyncId) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAsyncId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeCallback other) {
      if (other == null) {
        return;
      }
      if (other.HasAsyncId) {
        AsyncId = other.AsyncId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogRecord : pb::IMessage<LogRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogRecord> _parser = new pb::MessageParser<LogRecord>(() => new LogRecord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord(LogRecord other) : this() {
      _hasBits0 = other._hasBits0;
      level_ = other.level_;
      target_ = other.target_;
      modulePath_ = other.modulePath_;
      file_ = other.file_;
      line_ = other.line_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord Clone() {
      return new LogRecord(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private readonly static global::LiveKit.Proto.LogLevel LevelDefaultValue = global::LiveKit.Proto.LogLevel.LogError;

    private global::LiveKit.Proto.LogLevel level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LogLevel Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private readonly static string TargetDefaultValue = "";

    private string target_;
    /// <summary>
    /// e.g "livekit", "libwebrtc", "tokio-tungstenite", etc...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_ ?? TargetDefaultValue; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "module_path" field.</summary>
    public const int ModulePathFieldNumber = 3;
    private readonly static string ModulePathDefaultValue = "";

    private string modulePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModulePath {
      get { return modulePath_ ?? ModulePathDefaultValue; }
      set {
        modulePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "module_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModulePath {
      get { return modulePath_ != null; }
    }
    /// <summary>Clears the value of the "module_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModulePath() {
      modulePath_ = null;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 4;
    private readonly static string FileDefaultValue = "";

    private string file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string File {
      get { return file_ ?? FileDefaultValue; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFile {
      get { return file_ != null; }
    }
    /// <summary>Clears the value of the "file" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFile() {
      file_ = null;
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 5;
    private readonly static uint LineDefaultValue = 0;

    private uint line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Line {
      get { if ((_hasBits0 & 2) != 0) { return line_; } else { return LineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        line_ = value;
      }
    }
    /// <summary>Gets whether the "line" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLine {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "line" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLine() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Target != other.Target) return false;
      if (ModulePath != other.ModulePath) return false;
      if (File != other.File) return false;
      if (Line != other.Line) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasModulePath) hash ^= ModulePath.GetHashCode();
      if (HasFile) hash ^= File.GetHashCode();
      if (HasLine) hash ^= Line.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (HasTarget) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (HasModulePath) {
        output.WriteRawTag(26);
        output.WriteString(ModulePath);
      }
      if (HasFile) {
        output.WriteRawTag(34);
        output.WriteString(File);
      }
      if (HasLine) {
        output.WriteRawTag(40);
        output.WriteUInt32(Line);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (HasTarget) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (HasModulePath) {
        output.WriteRawTag(26);
        output.WriteString(ModulePath);
      }
      if (HasFile) {
        output.WriteRawTag(34);
        output.WriteString(File);
      }
      if (HasLine) {
        output.WriteRawTag(40);
        output.WriteUInt32(Line);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasModulePath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModulePath);
      }
      if (HasFile) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (HasLine) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Line);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogRecord other) {
      if (other == null) {
        return;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasModulePath) {
        ModulePath = other.ModulePath;
      }
      if (other.HasFile) {
        File = other.File;
      }
      if (other.HasLine) {
        Line = other.Line;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::LiveKit.Proto.LogLevel) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            ModulePath = input.ReadString();
            break;
          }
          case 34: {
            File = input.ReadString();
            break;
          }
          case 40: {
            Line = input.ReadUInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::LiveKit.Proto.LogLevel) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            ModulePath = input.ReadString();
            break;
          }
          case 34: {
            File = input.ReadString();
            break;
          }
          case 40: {
            Line = input.ReadUInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogBatch : pb::IMessage<LogBatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogBatch> _parser = new pb::MessageParser<LogBatch>(() => new LogBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch(LogBatch other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch Clone() {
      return new LogBatch(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LiveKit.Proto.LogRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::LiveKit.Proto.LogRecord.Parser);
    private readonly pbc::RepeatedField<global::LiveKit.Proto.LogRecord> records_ = new pbc::RepeatedField<global::LiveKit.Proto.LogRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LiveKit.Proto.LogRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      records_.WriteTo(ref output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogBatch other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Panic : pb::IMessage<Panic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Panic> _parser = new pb::MessageParser<Panic>(() => new Panic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Panic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic(Panic other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic Clone() {
      return new Panic(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Panic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Panic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Panic other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
